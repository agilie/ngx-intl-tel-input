{"version":3,"file":"ngx-intl-tel-input.umd.js","sources":["../../../projects/ngx-intl-tel-input/src/lib/enums/country-iso.enum.ts","../../../projects/ngx-intl-tel-input/src/lib/data/country-code.ts","../../../projects/ngx-intl-tel-input/src/lib/enums/search-country-field.enum.ts","../../../projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.validator.ts","../../../projects/ngx-intl-tel-input/src/lib/enums/phone-number-format.enum.ts","../../../projects/ngx-intl-tel-input/src/lib/directives/native-element-injector.directive.ts","../../../projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.component.ts","../../../projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.component.html","../../../projects/ngx-intl-tel-input/src/lib/ngx-intl-tel-input.module.ts","../../../projects/ngx-intl-tel-input/src/public_api.ts","../../../projects/ngx-intl-tel-input/src/ngx-intl-tel-input.ts"],"sourcesContent":["export enum CountryISO {\n\tAfghanistan = 'af',\n\tAlbania = 'al',\n\tAlgeria = 'dz',\n\tAmericanSamoa = 'as',\n\tAndorra = 'ad',\n\tAngola = 'ao',\n\tAnguilla = 'ai',\n\tAntiguaAndBarbuda = 'ag',\n\tArgentina = 'ar',\n\tArmenia = 'am',\n\tAruba = 'aw',\n\tAustralia = 'au',\n\tAustria = 'at',\n\tAzerbaijan = 'az',\n\tBahamas = 'bs',\n\tBahrain = 'bh',\n\tBangladesh = 'bd',\n\tBarbados = 'bb',\n\tBelarus = 'by',\n\tBelgium = 'be',\n\tBelize = 'bz',\n\tBenin = 'bj',\n\tBermuda = 'bm',\n\tBhutan = 'bt',\n\tBolivia = 'bo',\n\tBosniaAndHerzegovina = 'ba',\n\tBotswana = 'bw',\n\tBrazil = 'br',\n\tBritishIndianOceanTerritory = 'io',\n\tBritishVirginIslands = 'vg',\n\tBrunei = 'bn',\n\tBulgaria = 'bg',\n\tBurkinaFaso = 'bf',\n\tBurundi = 'bi',\n\tCambodia = 'kh',\n\tCameroon = 'cm',\n\tCanada = 'ca',\n\tCapeVerde = 'cv',\n\tCaribbeanNetherlands = 'bq',\n\tCaymanIslands = 'ky',\n\tCentralAfricanRepublic = 'cf',\n\tChad = 'td',\n\tChile = 'cl',\n\tChina = 'cn',\n\tChristmasIsland = 'cx',\n\tCocos = 'cc',\n\tColombia = 'co',\n\tComoros = 'km',\n\tCongoDRCJamhuriYaKidemokrasiaYaKongo = 'cd',\n\tCongoRepublicCongoBrazzaville = 'cg',\n\tCookIslands = 'ck',\n\tCostaRica = 'cr',\n\tCôteDIvoire = 'ci',\n\tCroatia = 'hr',\n\tCuba = 'cu',\n\tCuraçao = 'cw',\n\tCyprus = 'cy',\n\tCzechRepublic = 'cz',\n\tDenmark = 'dk',\n\tDjibouti = 'dj',\n\tDominica = 'dm',\n\tDominicanRepublic = 'do',\n\tEcuador = 'ec',\n\tEgypt = 'eg',\n\tElSalvador = 'sv',\n\tEquatorialGuinea = 'gq',\n\tEritrea = 'er',\n\tEstonia = 'ee',\n\tEthiopia = 'et',\n\tFalklandIslands = 'fk',\n\tFaroeIslands = 'fo',\n\tFiji = 'fj',\n\tFinland = 'fi',\n\tFrance = 'fr',\n\tFrenchGuiana = 'gf',\n\tFrenchPolynesia = 'pf',\n\tGabon = 'ga',\n\tGambia = 'gm',\n\tGeorgia = 'ge',\n\tGermany = 'de',\n\tGhana = 'gh',\n\tGibraltar = 'gi',\n\tGreece = 'gr',\n\tGreenland = 'gl',\n\tGrenada = 'gd',\n\tGuadeloupe = 'gp',\n\tGuam = 'gu',\n\tGuatemala = 'gt',\n\tGuernsey = 'gg',\n\tGuinea = 'gn',\n\tGuineaBissau = 'gw',\n\tGuyana = 'gy',\n\tHaiti = 'ht',\n\tHonduras = 'hn',\n\tHongKong = 'hk',\n\tHungary = 'hu',\n\tIceland = 'is',\n\tIndia = 'in',\n\tIndonesia = 'id',\n\tIran = 'ir',\n\tIraq = 'iq',\n\tIreland = 'ie',\n\tIsleOfMan = 'im',\n\tIsrael = 'il',\n\tItaly = 'it',\n\tJamaica = 'jm',\n\tJapan = 'jp',\n\tJersey = 'je',\n\tJordan = 'jo',\n\tKazakhstan = 'kz',\n\tKenya = 'ke',\n\tKiribati = 'ki',\n\tKosovo = 'xk',\n\tKuwait = 'kw',\n\tKyrgyzstan = 'kg',\n\tLaos = 'la',\n\tLatvia = 'lv',\n\tLebanon = 'lb',\n\tLesotho = 'ls',\n\tLiberia = 'lr',\n\tLibya = 'ly',\n\tLiechtenstein = 'li',\n\tLithuania = 'lt',\n\tLuxembourg = 'lu',\n\tMacau = 'mo',\n\tMacedonia = 'mk',\n\tMadagascar = 'mg',\n\tMalawi = 'mw',\n\tMalaysia = 'my',\n\tMaldives = 'mv',\n\tMali = 'ml',\n\tMalta = 'mt',\n\tMarshallIslands = 'mh',\n\tMartinique = 'mq',\n\tMauritania = 'mr',\n\tMauritius = 'mu',\n\tMayotte = 'yt',\n\tMexico = 'mx',\n\tMicronesia = 'fm',\n\tMoldova = 'md',\n\tMonaco = 'mc',\n\tMongolia = 'mn',\n\tMontenegro = 'me',\n\tMontserrat = 'ms',\n\tMorocco = 'ma',\n\tMozambique = 'mz',\n\tMyanmar = 'mm',\n\tNamibia = 'na',\n\tNauru = 'nr',\n\tNepal = 'np',\n\tNetherlands = 'nl',\n\tNewCaledonia = 'nc',\n\tNewZealand = 'nz',\n\tNicaragua = 'ni',\n\tNiger = 'ne',\n\tNigeria = 'ng',\n\tNiue = 'nu',\n\tNorfolkIsland = 'nf',\n\tNorthKorea = 'kp',\n\tNorthernMarianaIslands = 'mp',\n\tNorway = 'no',\n\tOman = 'om',\n\tPakistan = 'pk',\n\tPalau = 'pw',\n\tPalestine = 'ps',\n\tPanama = 'pa',\n\tPapuaNewGuinea = 'pg',\n\tParaguay = 'py',\n\tPeru = 'pe',\n\tPhilippines = 'ph',\n\tPoland = 'pl',\n\tPortugal = 'pt',\n\tPuertoRico = 'pr',\n\tQatar = 'qa',\n\tRéunion = 're',\n\tRomania = 'ro',\n\tRussia = 'ru',\n\tRwanda = 'rw',\n\tSaintBarthélemy = 'bl',\n\tSaintHelena = 'sh',\n\tSaintKittsAndNevis = 'kn',\n\tSaintLucia = 'lc',\n\tSaintMartin = 'mf',\n\tSaintPierreAndMiquelon = 'pm',\n\tSaintVincentAndTheGrenadines = 'vc',\n\tSamoa = 'ws',\n\tSanMarino = 'sm',\n\tSãoToméAndPríncipe = 'st',\n\tSaudiArabia = 'sa',\n\tSenegal = 'sn',\n\tSerbia = 'rs',\n\tSeychelles = 'sc',\n\tSierraLeone = 'sl',\n\tSingapore = 'sg',\n\tSintMaarten = 'sx',\n\tSlovakia = 'sk',\n\tSlovenia = 'si',\n\tSolomonIslands = 'sb',\n\tSomalia = 'so',\n\tSouthAfrica = 'za',\n\tSouthKorea = 'kr',\n\tSouthSudan = 'ss',\n\tSpain = 'es',\n\tSriLanka = 'lk',\n\tSudan = 'sd',\n\tSuriname = 'sr',\n\tSvalbardAndJanMayen = 'sj',\n\tSwaziland = 'sz',\n\tSweden = 'se',\n\tSwitzerland = 'ch',\n\tSyria = 'sy',\n\tTaiwan = 'tw',\n\tTajikistan = 'tj',\n\tTanzania = 'tz',\n\tThailand = 'th',\n\tTimorLeste = 'tl',\n\tTogo = 'tg',\n\tTokelau = 'tk',\n\tTonga = 'to',\n\tTrinidadAndTobago = 'tt',\n\tTunisia = 'tn',\n\tTurkey = 'tr',\n\tTurkmenistan = 'tm',\n\tTurksAndCaicosIslands = 'tc',\n\tTuvalu = 'tv',\n\tUSVirginIslands = 'vi',\n\tUganda = 'ug',\n\tUkraine = 'ua',\n\tUnitedArabEmirates = 'ae',\n\tUnitedKingdom = 'gb',\n\tUnitedStates = 'us',\n\tUruguay = 'uy',\n\tUzbekistan = 'uz',\n\tVanuatu = 'vu',\n\tVaticanCity = 'va',\n\tVenezuela = 've',\n\tVietnam = 'vn',\n\tWallisAndFutuna = 'wf',\n\tWesternSahara = 'eh',\n\tYemen = 'ye',\n\tZambia = 'zm',\n\tZimbabwe = 'zw',\n\tÅlandIslands = 'ax',\n}\n","import { Injectable } from \"@angular/core\";\nimport { CountryISO } from '../enums/country-iso.enum';\n\n@Injectable()\nexport class CountryCode {\n\tpublic allCountries = [\n\t\t[\n\t\t\t'Afghanistan (‫افغانستان‬‎)',\n\t\t\tCountryISO.Afghanistan,\n\t\t\t'93'\n\t\t],\n\t\t[\n\t\t\t'Albania (Shqipëri)',\n\t\t\tCountryISO.Albania,\n\t\t\t'355'\n\t\t],\n\t\t[\n\t\t\t'Algeria (‫الجزائر‬‎)',\n\t\t\tCountryISO.Algeria,\n\t\t\t'213'\n\t\t],\n\t\t[\n\t\t\t'American Samoa',\n\t\t\t'as',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'684',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Andorra',\n\t\t\tCountryISO.Andorra,\n\t\t\t'376'\n\t\t],\n\t\t[\n\t\t\t'Angola',\n\t\t\tCountryISO.Angola,\n\t\t\t'244'\n\t\t],\n\t\t[\n\t\t\t'Anguilla',\n\t\t\t'ai',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'264',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Antigua and Barbuda',\n\t\t\t'ag',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'268',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Argentina',\n\t\t\tCountryISO.Argentina,\n\t\t\t'54'\n\t\t],\n\t\t[\n\t\t\t'Armenia (Հայաստան)',\n\t\t\tCountryISO.Armenia,\n\t\t\t'374'\n\t\t],\n\t\t[\n\t\t\t'Aruba',\n\t\t\tCountryISO.Aruba,\n\t\t\t'297'\n\t\t],\n\t\t[\n\t\t\t'Australia',\n\t\t\tCountryISO.Australia,\n\t\t\t'61',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Austria (Österreich)',\n\t\t\tCountryISO.Austria,\n\t\t\t'43'\n\t\t],\n\t\t[\n\t\t\t'Azerbaijan (Azərbaycan)',\n\t\t\tCountryISO.Azerbaijan,\n\t\t\t'994'\n\t\t],\n\t\t[\n\t\t\t'Bahamas',\n\t\t\t'bs',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'242',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bahrain (‫البحرين‬‎)',\n\t\t\tCountryISO.Bahrain,\n\t\t\t'973'\n\t\t],\n\t\t[\n\t\t\t'Bangladesh (বাংলাদেশ)',\n\t\t\tCountryISO.Bangladesh,\n\t\t\t'880'\n\t\t],\n\t\t[\n\t\t\t'Barbados',\n\t\t\t'bb',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'246',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Belarus (Беларусь)',\n\t\t\tCountryISO.Belarus,\n\t\t\t'375'\n\t\t],\n\t\t[\n\t\t\t'Belgium (België)',\n\t\t\tCountryISO.Belgium,\n\t\t\t'32'\n\t\t],\n\t\t[\n\t\t\t'Belize',\n\t\t\tCountryISO.Belize,\n\t\t\t'501'\n\t\t],\n\t\t[\n\t\t\t'Benin (Bénin)',\n\t\t\tCountryISO.Benin,\n\t\t\t'229'\n\t\t],\n\t\t[\n\t\t\t'Bermuda',\n\t\t\t'bm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'441',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bhutan (འབྲུག)',\n\t\t\tCountryISO.Bhutan,\n\t\t\t'975'\n\t\t],\n\t\t[\n\t\t\t'Bolivia',\n\t\t\tCountryISO.Bolivia,\n\t\t\t'591'\n\t\t],\n\t\t[\n\t\t\t'Bosnia and Herzegovina (Босна и Херцеговина)',\n\t\t\tCountryISO.BosniaAndHerzegovina,\n\t\t\t'387'\n\t\t],\n\t\t[\n\t\t\t'Botswana',\n\t\t\tCountryISO.Botswana,\n\t\t\t'267'\n\t\t],\n\t\t[\n\t\t\t'Brazil (Brasil)',\n\t\t\tCountryISO.Brazil,\n\t\t\t'55'\n\t\t],\n\t\t[\n\t\t\t'British Indian Ocean Territory',\n\t\t\tCountryISO.BritishIndianOceanTerritory,\n\t\t\t'246'\n\t\t],\n\t\t[\n\t\t\t'British Virgin Islands',\n\t\t\t'vg',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'284',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Brunei',\n\t\t\tCountryISO.Brunei,\n\t\t\t'673'\n\t\t],\n\t\t[\n\t\t\t'Bulgaria (България)',\n\t\t\tCountryISO.Bulgaria,\n\t\t\t'359'\n\t\t],\n\t\t[\n\t\t\t'Burkina Faso',\n\t\t\tCountryISO.BurkinaFaso,\n\t\t\t'226'\n\t\t],\n\t\t[\n\t\t\t'Burundi (Uburundi)',\n\t\t\tCountryISO.Burundi,\n\t\t\t'257'\n\t\t],\n\t\t[\n\t\t\t'Cambodia (កម្ពុជា)',\n\t\t\tCountryISO.Cambodia,\n\t\t\t'855'\n\t\t],\n\t\t[\n\t\t\t'Cameroon (Cameroun)',\n\t\t\tCountryISO.Cameroon,\n\t\t\t'237'\n\t\t],\n\t\t[\n\t\t\t'Canada',\n\t\t\tCountryISO.Canada,\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416',\n\t\t\t\t'418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587',\n\t\t\t\t'604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807',\n\t\t\t\t'819', '825', '867', '873', '902', '905'\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Cape Verde (Kabu Verdi)',\n\t\t\tCountryISO.CapeVerde,\n\t\t\t'238'\n\t\t],\n\t\t[\n\t\t\t'Caribbean Netherlands',\n\t\t\tCountryISO.CaribbeanNetherlands,\n\t\t\t'599',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Cayman Islands',\n\t\t\t'ky',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'345',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Central African Republic (République centrafricaine)',\n\t\t\tCountryISO.CentralAfricanRepublic,\n\t\t\t'236'\n\t\t],\n\t\t[\n\t\t\t'Chad (Tchad)',\n\t\t\tCountryISO.Chad,\n\t\t\t'235'\n\t\t],\n\t\t[\n\t\t\t'Chile',\n\t\t\tCountryISO.Chile,\n\t\t\t'56'\n\t\t],\n\t\t[\n\t\t\t'China (中国)',\n\t\t\tCountryISO.China,\n\t\t\t'86'\n\t\t],\n\t\t[\n\t\t\t'Christmas Island',\n\t\t\tCountryISO.ChristmasIsland,\n\t\t\t'61',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Cocos (Keeling) Islands',\n\t\t\tCountryISO.Cocos,\n\t\t\t'61',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Colombia',\n\t\t\tCountryISO.Colombia,\n\t\t\t'57'\n\t\t],\n\t\t[\n\t\t\t'Comoros (‫جزر القمر‬‎)',\n\t\t\tCountryISO.Comoros,\n\t\t\t'269'\n\t\t],\n\t\t[\n\t\t\t'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\n\t\t\tCountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo,\n\t\t\t'243'\n\t\t],\n\t\t[\n\t\t\t'Congo (Republic) (Congo-Brazzaville)',\n\t\t\tCountryISO.CongoRepublicCongoBrazzaville,\n\t\t\t'242'\n\t\t],\n\t\t[\n\t\t\t'Cook Islands',\n\t\t\tCountryISO.CookIslands,\n\t\t\t'682'\n\t\t],\n\t\t[\n\t\t\t'Costa Rica',\n\t\t\tCountryISO.CostaRica,\n\t\t\t'506'\n\t\t],\n\t\t[\n\t\t\t'Côte d’Ivoire',\n\t\t\tCountryISO.CôteDIvoire,\n\t\t\t'225'\n\t\t],\n\t\t[\n\t\t\t'Croatia (Hrvatska)',\n\t\t\tCountryISO.Croatia,\n\t\t\t'385'\n\t\t],\n\t\t[\n\t\t\t'Cuba',\n\t\t\tCountryISO.Cuba,\n\t\t\t'53'\n\t\t],\n\t\t[\n\t\t\t'Curaçao',\n\t\t\tCountryISO.Curaçao,\n\t\t\t'599',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Cyprus (Κύπρος)',\n\t\t\tCountryISO.Cyprus,\n\t\t\t'357'\n\t\t],\n\t\t[\n\t\t\t'Czech Republic (Česká republika)',\n\t\t\tCountryISO.CzechRepublic,\n\t\t\t'420'\n\t\t],\n\t\t[\n\t\t\t'Denmark (Danmark)',\n\t\t\tCountryISO.Denmark,\n\t\t\t'45'\n\t\t],\n\t\t[\n\t\t\t'Djibouti',\n\t\t\tCountryISO.Djibouti,\n\t\t\t'253'\n\t\t],\n\t\t[\n\t\t\t'Dominica',\n\t\t\tCountryISO.Dominica,\n\t\t\t'1767'\n\t\t],\n\t\t[\n\t\t\t'Dominican Republic (República Dominicana)',\n\t\t\tCountryISO.DominicanRepublic,\n\t\t\t'1',\n\t\t\t2,\n\t\t\t['809', '829', '849']\n\t\t],\n\t\t[\n\t\t\t'Ecuador',\n\t\t\tCountryISO.Ecuador,\n\t\t\t'593'\n\t\t],\n\t\t[\n\t\t\t'Egypt (‫مصر‬‎)',\n\t\t\tCountryISO.Egypt,\n\t\t\t'20'\n\t\t],\n\t\t[\n\t\t\t'El Salvador',\n\t\t\tCountryISO.ElSalvador,\n\t\t\t'503'\n\t\t],\n\t\t[\n\t\t\t'Equatorial Guinea (Guinea Ecuatorial)',\n\t\t\tCountryISO.EquatorialGuinea,\n\t\t\t'240'\n\t\t],\n\t\t[\n\t\t\t'Eritrea',\n\t\t\tCountryISO.Eritrea,\n\t\t\t'291'\n\t\t],\n\t\t[\n\t\t\t'Estonia (Eesti)',\n\t\t\tCountryISO.Estonia,\n\t\t\t'372'\n\t\t],\n\t\t[\n\t\t\t'Ethiopia',\n\t\t\tCountryISO.Ethiopia,\n\t\t\t'251'\n\t\t],\n\t\t[\n\t\t\t'Falkland Islands (Islas Malvinas)',\n\t\t\tCountryISO.FalklandIslands,\n\t\t\t'500'\n\t\t],\n\t\t[\n\t\t\t'Faroe Islands (Føroyar)',\n\t\t\tCountryISO.FaroeIslands,\n\t\t\t'298'\n\t\t],\n\t\t[\n\t\t\t'Fiji',\n\t\t\tCountryISO.Fiji,\n\t\t\t'679'\n\t\t],\n\t\t[\n\t\t\t'Finland (Suomi)',\n\t\t\tCountryISO.Finland,\n\t\t\t'358',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'France',\n\t\t\tCountryISO.France,\n\t\t\t'33'\n\t\t],\n\t\t[\n\t\t\t'French Guiana (Guyane française)',\n\t\t\tCountryISO.FrenchGuiana,\n\t\t\t'594'\n\t\t],\n\t\t[\n\t\t\t'French Polynesia (Polynésie française)',\n\t\t\tCountryISO.FrenchPolynesia,\n\t\t\t'689'\n\t\t],\n\t\t[\n\t\t\t'Gabon',\n\t\t\tCountryISO.Gabon,\n\t\t\t'241'\n\t\t],\n\t\t[\n\t\t\t'Gambia',\n\t\t\tCountryISO.Gambia,\n\t\t\t'220'\n\t\t],\n\t\t[\n\t\t\t'Georgia (საქართველო)',\n\t\t\tCountryISO.Georgia,\n\t\t\t'995'\n\t\t],\n\t\t[\n\t\t\t'Germany (Deutschland)',\n\t\t\tCountryISO.Germany,\n\t\t\t'49'\n\t\t],\n\t\t[\n\t\t\t'Ghana (Gaana)',\n\t\t\tCountryISO.Ghana,\n\t\t\t'233'\n\t\t],\n\t\t[\n\t\t\t'Gibraltar',\n\t\t\tCountryISO.Gibraltar,\n\t\t\t'350'\n\t\t],\n\t\t[\n\t\t\t'Greece (Ελλάδα)',\n\t\t\tCountryISO.Greece,\n\t\t\t'30'\n\t\t],\n\t\t[\n\t\t\t'Greenland (Kalaallit Nunaat)',\n\t\t\tCountryISO.Greenland,\n\t\t\t'299'\n\t\t],\n\t\t[\n\t\t\t'Grenada',\n\t\t\tCountryISO.Grenada,\n\t\t\t'1473'\n\t\t],\n\t\t[\n\t\t\t'Guadeloupe',\n\t\t\tCountryISO.Guadeloupe,\n\t\t\t'590',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Guam',\n\t\t\t'gu',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'671',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Guatemala',\n\t\t\tCountryISO.Guatemala,\n\t\t\t'502'\n\t\t],\n\t\t[\n\t\t\t'Guernsey',\n\t\t\tCountryISO.Guernsey,\n\t\t\t'44',\n\t\t\t1,\n\t\t\t[1481]\n\t\t],\n\t\t[\n\t\t\t'Guinea (Guinée)',\n\t\t\tCountryISO.Guinea,\n\t\t\t'224'\n\t\t],\n\t\t[\n\t\t\t'Guinea-Bissau (Guiné Bissau)',\n\t\t\tCountryISO.GuineaBissau,\n\t\t\t'245'\n\t\t],\n\t\t[\n\t\t\t'Guyana',\n\t\t\tCountryISO.Guyana,\n\t\t\t'592'\n\t\t],\n\t\t[\n\t\t\t'Haiti',\n\t\t\tCountryISO.Haiti,\n\t\t\t'509'\n\t\t],\n\t\t[\n\t\t\t'Honduras',\n\t\t\tCountryISO.Honduras,\n\t\t\t'504'\n\t\t],\n\t\t[\n\t\t\t'Hong Kong (香港)',\n\t\t\tCountryISO.HongKong,\n\t\t\t'852'\n\t\t],\n\t\t[\n\t\t\t'Hungary (Magyarország)',\n\t\t\tCountryISO.Hungary,\n\t\t\t'36'\n\t\t],\n\t\t[\n\t\t\t'Iceland (Ísland)',\n\t\t\tCountryISO.Iceland,\n\t\t\t'354'\n\t\t],\n\t\t[\n\t\t\t'India (भारत)',\n\t\t\tCountryISO.India,\n\t\t\t'91'\n\t\t],\n\t\t[\n\t\t\t'Indonesia',\n\t\t\tCountryISO.Indonesia,\n\t\t\t'62'\n\t\t],\n\t\t[\n\t\t\t'Iran (‫ایران‬‎)',\n\t\t\tCountryISO.Iran,\n\t\t\t'98'\n\t\t],\n\t\t[\n\t\t\t'Iraq (‫العراق‬‎)',\n\t\t\tCountryISO.Iraq,\n\t\t\t'964'\n\t\t],\n\t\t[\n\t\t\t'Ireland',\n\t\t\tCountryISO.Ireland,\n\t\t\t'353'\n\t\t],\n\t\t[\n\t\t\t'Isle of Man',\n\t\t\tCountryISO.IsleOfMan,\n\t\t\t'44',\n\t\t\t2,\n\t\t\t[1624]\n\t\t],\n\t\t[\n\t\t\t'Israel (‫ישראל‬‎)',\n\t\t\tCountryISO.Israel,\n\t\t\t'972'\n\t\t],\n\t\t[\n\t\t\t'Italy (Italia)',\n\t\t\tCountryISO.Italy,\n\t\t\t'39',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Jamaica',\n\t\t\t'jm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'876',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Japan (日本)',\n\t\t\tCountryISO.Japan,\n\t\t\t'81'\n\t\t],\n\t\t[\n\t\t\t'Jersey',\n\t\t\tCountryISO.Jersey,\n\t\t\t'44',\n\t\t\t3,\n\t\t\t[1534]\n\t\t],\n\t\t[\n\t\t\t'Jordan (‫الأردن‬‎)',\n\t\t\tCountryISO.Jordan,\n\t\t\t'962'\n\t\t],\n\t\t[\n\t\t\t'Kazakhstan (Казахстан)',\n\t\t\tCountryISO.Kazakhstan,\n\t\t\t'7',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Kenya',\n\t\t\tCountryISO.Kenya,\n\t\t\t'254'\n\t\t],\n\t\t[\n\t\t\t'Kiribati',\n\t\t\tCountryISO.Kiribati,\n\t\t\t'686'\n\t\t],\n\t\t[\n\t\t\t'Kosovo',\n\t\t\tCountryISO.Kosovo,\n\t\t\t'383'\n\t\t],\n\t\t[\n\t\t\t'Kuwait (‫الكويت‬‎)',\n\t\t\tCountryISO.Kuwait,\n\t\t\t'965'\n\t\t],\n\t\t[\n\t\t\t'Kyrgyzstan (Кыргызстан)',\n\t\t\tCountryISO.Kyrgyzstan,\n\t\t\t'996'\n\t\t],\n\t\t[\n\t\t\t'Laos (ລາວ)',\n\t\t\tCountryISO.Laos,\n\t\t\t'856'\n\t\t],\n\t\t[\n\t\t\t'Latvia (Latvija)',\n\t\t\tCountryISO.Latvia,\n\t\t\t'371'\n\t\t],\n\t\t[\n\t\t\t'Lebanon (‫لبنان‬‎)',\n\t\t\tCountryISO.Lebanon,\n\t\t\t'961'\n\t\t],\n\t\t[\n\t\t\t'Lesotho',\n\t\t\tCountryISO.Lesotho,\n\t\t\t'266'\n\t\t],\n\t\t[\n\t\t\t'Liberia',\n\t\t\tCountryISO.Liberia,\n\t\t\t'231'\n\t\t],\n\t\t[\n\t\t\t'Libya (‫ليبيا‬‎)',\n\t\t\tCountryISO.Libya,\n\t\t\t'218'\n\t\t],\n\t\t[\n\t\t\t'Liechtenstein',\n\t\t\tCountryISO.Liechtenstein,\n\t\t\t'423'\n\t\t],\n\t\t[\n\t\t\t'Lithuania (Lietuva)',\n\t\t\tCountryISO.Lithuania,\n\t\t\t'370'\n\t\t],\n\t\t[\n\t\t\t'Luxembourg',\n\t\t\tCountryISO.Luxembourg,\n\t\t\t'352'\n\t\t],\n\t\t[\n\t\t\t'Macau (澳門)',\n\t\t\tCountryISO.Macau,\n\t\t\t'853'\n\t\t],\n\t\t[\n\t\t\t'Macedonia (FYROM) (Македонија)',\n\t\t\tCountryISO.Macedonia,\n\t\t\t'389'\n\t\t],\n\t\t[\n\t\t\t'Madagascar (Madagasikara)',\n\t\t\tCountryISO.Madagascar,\n\t\t\t'261'\n\t\t],\n\t\t[\n\t\t\t'Malawi',\n\t\t\tCountryISO.Malawi,\n\t\t\t'265'\n\t\t],\n\t\t[\n\t\t\t'Malaysia',\n\t\t\tCountryISO.Malaysia,\n\t\t\t'60'\n\t\t],\n\t\t[\n\t\t\t'Maldives',\n\t\t\tCountryISO.Maldives,\n\t\t\t'960'\n\t\t],\n\t\t[\n\t\t\t'Mali',\n\t\t\tCountryISO.Mali,\n\t\t\t'223'\n\t\t],\n\t\t[\n\t\t\t'Malta',\n\t\t\tCountryISO.Malta,\n\t\t\t'356'\n\t\t],\n\t\t[\n\t\t\t'Marshall Islands',\n\t\t\tCountryISO.MarshallIslands,\n\t\t\t'692'\n\t\t],\n\t\t[\n\t\t\t'Martinique',\n\t\t\tCountryISO.Martinique,\n\t\t\t'596'\n\t\t],\n\t\t[\n\t\t\t'Mauritania (‫موريتانيا‬‎)',\n\t\t\tCountryISO.Mauritania,\n\t\t\t'222'\n\t\t],\n\t\t[\n\t\t\t'Mauritius (Moris)',\n\t\t\tCountryISO.Mauritius,\n\t\t\t'230'\n\t\t],\n\t\t[\n\t\t\t'Mayotte',\n\t\t\tCountryISO.Mayotte,\n\t\t\t'262',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Mexico (México)',\n\t\t\tCountryISO.Mexico,\n\t\t\t'52'\n\t\t],\n\t\t[\n\t\t\t'Micronesia',\n\t\t\tCountryISO.Micronesia,\n\t\t\t'691'\n\t\t],\n\t\t[\n\t\t\t'Moldova (Republica Moldova)',\n\t\t\tCountryISO.Moldova,\n\t\t\t'373'\n\t\t],\n\t\t[\n\t\t\t'Monaco',\n\t\t\tCountryISO.Monaco,\n\t\t\t'377'\n\t\t],\n\t\t[\n\t\t\t'Mongolia (Монгол)',\n\t\t\tCountryISO.Mongolia,\n\t\t\t'976'\n\t\t],\n\t\t[\n\t\t\t'Montenegro (Crna Gora)',\n\t\t\tCountryISO.Montenegro,\n\t\t\t'382'\n\t\t],\n\t\t[\n\t\t\t'Montserrat',\n\t\t\t'ms',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'664',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Morocco (‫المغرب‬‎)',\n\t\t\tCountryISO.Morocco,\n\t\t\t'212',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Mozambique (Moçambique)',\n\t\t\tCountryISO.Mozambique,\n\t\t\t'258'\n\t\t],\n\t\t[\n\t\t\t'Myanmar (Burma) (မြန်မာ)',\n\t\t\tCountryISO.Myanmar,\n\t\t\t'95'\n\t\t],\n\t\t[\n\t\t\t'Namibia (Namibië)',\n\t\t\tCountryISO.Namibia,\n\t\t\t'264'\n\t\t],\n\t\t[\n\t\t\t'Nauru',\n\t\t\tCountryISO.Nauru,\n\t\t\t'674'\n\t\t],\n\t\t[\n\t\t\t'Nepal (नेपाल)',\n\t\t\tCountryISO.Nepal,\n\t\t\t'977'\n\t\t],\n\t\t[\n\t\t\t'Netherlands (Nederland)',\n\t\t\tCountryISO.Netherlands,\n\t\t\t'31'\n\t\t],\n\t\t[\n\t\t\t'New Caledonia (Nouvelle-Calédonie)',\n\t\t\tCountryISO.NewCaledonia,\n\t\t\t'687'\n\t\t],\n\t\t[\n\t\t\t'New Zealand',\n\t\t\tCountryISO.NewZealand,\n\t\t\t'64'\n\t\t],\n\t\t[\n\t\t\t'Nicaragua',\n\t\t\tCountryISO.Nicaragua,\n\t\t\t'505'\n\t\t],\n\t\t[\n\t\t\t'Niger (Nijar)',\n\t\t\tCountryISO.Niger,\n\t\t\t'227'\n\t\t],\n\t\t[\n\t\t\t'Nigeria',\n\t\t\tCountryISO.Nigeria,\n\t\t\t'234'\n\t\t],\n\t\t[\n\t\t\t'Niue',\n\t\t\tCountryISO.Niue,\n\t\t\t'683'\n\t\t],\n\t\t[\n\t\t\t'Norfolk Island',\n\t\t\tCountryISO.NorfolkIsland,\n\t\t\t'672'\n\t\t],\n\t\t[\n\t\t\t'North Korea (조선 민주주의 인민 공화국)',\n\t\t\tCountryISO.NorthKorea,\n\t\t\t'850'\n\t\t],\n\t\t[\n\t\t\t'Northern Mariana Islands',\n\t\t\tCountryISO.NorthernMarianaIslands,\n\t\t\t'1670'\n\t\t],\n\t\t[\n\t\t\t'Norway (Norge)',\n\t\t\tCountryISO.Norway,\n\t\t\t'47',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Oman (‫عُمان‬‎)',\n\t\t\tCountryISO.Oman,\n\t\t\t'968'\n\t\t],\n\t\t[\n\t\t\t'Pakistan (‫پاکستان‬‎)',\n\t\t\tCountryISO.Pakistan,\n\t\t\t'92'\n\t\t],\n\t\t[\n\t\t\t'Palau',\n\t\t\tCountryISO.Palau,\n\t\t\t'680'\n\t\t],\n\t\t[\n\t\t\t'Palestine (‫فلسطين‬‎)',\n\t\t\tCountryISO.Palestine,\n\t\t\t'970'\n\t\t],\n\t\t[\n\t\t\t'Panama (Panamá)',\n\t\t\tCountryISO.Panama,\n\t\t\t'507'\n\t\t],\n\t\t[\n\t\t\t'Papua New Guinea',\n\t\t\tCountryISO.PapuaNewGuinea,\n\t\t\t'675'\n\t\t],\n\t\t[\n\t\t\t'Paraguay',\n\t\t\tCountryISO.Paraguay,\n\t\t\t'595'\n\t\t],\n\t\t[\n\t\t\t'Peru (Perú)',\n\t\t\tCountryISO.Peru,\n\t\t\t'51'\n\t\t],\n\t\t[\n\t\t\t'Philippines',\n\t\t\tCountryISO.Philippines,\n\t\t\t'63'\n\t\t],\n\t\t[\n\t\t\t'Poland (Polska)',\n\t\t\tCountryISO.Poland,\n\t\t\t'48'\n\t\t],\n\t\t[\n\t\t\t'Portugal',\n\t\t\tCountryISO.Portugal,\n\t\t\t'351'\n\t\t],\n\t\t[\n\t\t\t'Puerto Rico',\n\t\t\tCountryISO.PuertoRico,\n\t\t\t'1',\n\t\t\t3,\n\t\t\t['787', '939']\n\t\t],\n\t\t[\n\t\t\t'Qatar (‫قطر‬‎)',\n\t\t\tCountryISO.Qatar,\n\t\t\t'974'\n\t\t],\n\t\t[\n\t\t\t'Réunion (La Réunion)',\n\t\t\tCountryISO.Réunion,\n\t\t\t'262',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Romania (România)',\n\t\t\tCountryISO.Romania,\n\t\t\t'40'\n\t\t],\n\t\t[\n\t\t\t'Russia (Россия)',\n\t\t\tCountryISO.Russia,\n\t\t\t'7',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Rwanda',\n\t\t\tCountryISO.Rwanda,\n\t\t\t'250'\n\t\t],\n\t\t[\n\t\t\t'Saint Barthélemy (Saint-Barthélemy)',\n\t\t\tCountryISO.SaintBarthélemy,\n\t\t\t'590',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Saint Helena',\n\t\t\tCountryISO.SaintHelena,\n\t\t\t'290'\n\t\t],\n\t\t[\n\t\t\t'Saint Kitts and Nevis',\n\t\t\tCountryISO.SaintKittsAndNevis,\n\t\t\t'1869'\n\t\t],\n\t\t[\n\t\t\t'Saint Lucia',\n\t\t\t'lc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'758',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Saint Martin (Saint-Martin (partie française))',\n\t\t\tCountryISO.SaintMartin,\n\t\t\t'590',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\n\t\t\tCountryISO.SaintPierreAndMiquelon,\n\t\t\t'508'\n\t\t],\n\t\t[\n\t\t\t'Saint Vincent and the Grenadines',\n\t\t\t'vc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'784',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Samoa',\n\t\t\tCountryISO.Samoa,\n\t\t\t'685'\n\t\t],\n\t\t[\n\t\t\t'San Marino',\n\t\t\tCountryISO.SanMarino,\n\t\t\t'378'\n\t\t],\n\t\t[\n\t\t\t'São Tomé and Príncipe (São Tomé e Príncipe)',\n\t\t\tCountryISO.SãoToméAndPríncipe,\n\t\t\t'239'\n\t\t],\n\t\t[\n\t\t\t'Saudi Arabia (‫المملكة العربية السعودية‬‎)',\n\t\t\tCountryISO.SaudiArabia,\n\t\t\t'966'\n\t\t],\n\t\t[\n\t\t\t'Senegal (Sénégal)',\n\t\t\tCountryISO.Senegal,\n\t\t\t'221'\n\t\t],\n\t\t[\n\t\t\t'Serbia (Србија)',\n\t\t\tCountryISO.Serbia,\n\t\t\t'381'\n\t\t],\n\t\t[\n\t\t\t'Seychelles',\n\t\t\tCountryISO.Seychelles,\n\t\t\t'248'\n\t\t],\n\t\t[\n\t\t\t'Sierra Leone',\n\t\t\tCountryISO.SierraLeone,\n\t\t\t'232'\n\t\t],\n\t\t[\n\t\t\t'Singapore',\n\t\t\tCountryISO.Singapore,\n\t\t\t'65'\n\t\t],\n\t\t[\n\t\t\t'Sint Maarten',\n\t\t\t'sx',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'721',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Slovakia (Slovensko)',\n\t\t\tCountryISO.Slovakia,\n\t\t\t'421'\n\t\t],\n\t\t[\n\t\t\t'Slovenia (Slovenija)',\n\t\t\tCountryISO.Slovenia,\n\t\t\t'386'\n\t\t],\n\t\t[\n\t\t\t'Solomon Islands',\n\t\t\tCountryISO.SolomonIslands,\n\t\t\t'677'\n\t\t],\n\t\t[\n\t\t\t'Somalia (Soomaaliya)',\n\t\t\tCountryISO.Somalia,\n\t\t\t'252'\n\t\t],\n\t\t[\n\t\t\t'South Africa',\n\t\t\tCountryISO.SouthAfrica,\n\t\t\t'27'\n\t\t],\n\t\t[\n\t\t\t'South Korea (대한민국)',\n\t\t\tCountryISO.SouthKorea,\n\t\t\t'82'\n\t\t],\n\t\t[\n\t\t\t'South Sudan (‫جنوب السودان‬‎)',\n\t\t\tCountryISO.SouthSudan,\n\t\t\t'211'\n\t\t],\n\t\t[\n\t\t\t'Spain (España)',\n\t\t\tCountryISO.Spain,\n\t\t\t'34'\n\t\t],\n\t\t[\n\t\t\t'Sri Lanka (ශ්‍රී ලංකාව)',\n\t\t\tCountryISO.SriLanka,\n\t\t\t'94'\n\t\t],\n\t\t[\n\t\t\t'Sudan (‫السودان‬‎)',\n\t\t\tCountryISO.Sudan,\n\t\t\t'249'\n\t\t],\n\t\t[\n\t\t\t'Suriname',\n\t\t\tCountryISO.Suriname,\n\t\t\t'597'\n\t\t],\n\t\t[\n\t\t\t'Svalbard and Jan Mayen',\n\t\t\tCountryISO.SvalbardAndJanMayen,\n\t\t\t'47',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Swaziland',\n\t\t\tCountryISO.Swaziland,\n\t\t\t'268'\n\t\t],\n\t\t[\n\t\t\t'Sweden (Sverige)',\n\t\t\tCountryISO.Sweden,\n\t\t\t'46'\n\t\t],\n\t\t[\n\t\t\t'Switzerland (Schweiz)',\n\t\t\tCountryISO.Switzerland,\n\t\t\t'41'\n\t\t],\n\t\t[\n\t\t\t'Syria (‫سوريا‬‎)',\n\t\t\tCountryISO.Syria,\n\t\t\t'963'\n\t\t],\n\t\t[\n\t\t\t'Taiwan (台灣)',\n\t\t\tCountryISO.Taiwan,\n\t\t\t'886'\n\t\t],\n\t\t[\n\t\t\t'Tajikistan',\n\t\t\tCountryISO.Tajikistan,\n\t\t\t'992'\n\t\t],\n\t\t[\n\t\t\t'Tanzania',\n\t\t\tCountryISO.Tanzania,\n\t\t\t'255'\n\t\t],\n\t\t[\n\t\t\t'Thailand (ไทย)',\n\t\t\tCountryISO.Thailand,\n\t\t\t'66'\n\t\t],\n\t\t[\n\t\t\t'Timor-Leste',\n\t\t\tCountryISO.TimorLeste,\n\t\t\t'670'\n\t\t],\n\t\t[\n\t\t\t'Togo',\n\t\t\tCountryISO.Togo,\n\t\t\t'228'\n\t\t],\n\t\t[\n\t\t\t'Tokelau',\n\t\t\tCountryISO.Tokelau,\n\t\t\t'690'\n\t\t],\n\t\t[\n\t\t\t'Tonga',\n\t\t\tCountryISO.Tonga,\n\t\t\t'676'\n\t\t],\n\t\t[\n\t\t\t'Trinidad and Tobago',\n\t\t\t'tt',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'868',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Tunisia (‫تونس‬‎)',\n\t\t\tCountryISO.Tunisia,\n\t\t\t'216'\n\t\t],\n\t\t[\n\t\t\t'Turkey (Türkiye)',\n\t\t\tCountryISO.Turkey,\n\t\t\t'90'\n\t\t],\n\t\t[\n\t\t\t'Turkmenistan',\n\t\t\tCountryISO.Turkmenistan,\n\t\t\t'993'\n\t\t],\n\t\t[\n\t\t\t'Turks and Caicos Islands',\n\t\t\tCountryISO.TurksAndCaicosIslands,\n\t\t\t'1649'\n\t\t],\n\t\t[\n\t\t\t'Tuvalu',\n\t\t\tCountryISO.Tuvalu,\n\t\t\t'688'\n\t\t],\n\t\t[\n\t\t\t'U.S. Virgin Islands',\n\t\t\t'vi',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'340',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Uganda',\n\t\t\tCountryISO.Uganda,\n\t\t\t'256'\n\t\t],\n\t\t[\n\t\t\t'Ukraine (Україна)',\n\t\t\tCountryISO.Ukraine,\n\t\t\t'380'\n\t\t],\n\t\t[\n\t\t\t'United Arab Emirates (‫الإمارات العربية المتحدة‬‎)',\n\t\t\tCountryISO.UnitedArabEmirates,\n\t\t\t'971'\n\t\t],\n\t\t[\n\t\t\t'United Kingdom',\n\t\t\tCountryISO.UnitedKingdom,\n\t\t\t'44',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'United States',\n\t\t\tCountryISO.UnitedStates,\n\t\t\t'1',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Uruguay',\n\t\t\tCountryISO.Uruguay,\n\t\t\t'598'\n\t\t],\n\t\t[\n\t\t\t'Uzbekistan (Oʻzbekiston)',\n\t\t\tCountryISO.Uzbekistan,\n\t\t\t'998'\n\t\t],\n\t\t[\n\t\t\t'Vanuatu',\n\t\t\tCountryISO.Vanuatu,\n\t\t\t'678'\n\t\t],\n\t\t[\n\t\t\t'Vatican City (Città del Vaticano)',\n\t\t\tCountryISO.VaticanCity,\n\t\t\t'39',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Venezuela',\n\t\t\tCountryISO.Venezuela,\n\t\t\t'58'\n\t\t],\n\t\t[\n\t\t\t'Vietnam (Việt Nam)',\n\t\t\tCountryISO.Vietnam,\n\t\t\t'84'\n\t\t],\n\t\t[\n\t\t\t'Wallis and Futuna',\n\t\t\tCountryISO.WallisAndFutuna,\n\t\t\t'681'\n\t\t],\n\t\t[\n\t\t\t'Western Sahara (‫الصحراء الغربية‬‎)',\n\t\t\tCountryISO.WesternSahara,\n\t\t\t'212',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Yemen (‫اليمن‬‎)',\n\t\t\tCountryISO.Yemen,\n\t\t\t'967'\n\t\t],\n\t\t[\n\t\t\t'Zambia',\n\t\t\tCountryISO.Zambia,\n\t\t\t'260'\n\t\t],\n\t\t[\n\t\t\t'Zimbabwe',\n\t\t\tCountryISO.Zimbabwe,\n\t\t\t'263'\n\t\t],\n\t\t[\n\t\t\t'Åland Islands',\n\t\t\tCountryISO.ÅlandIslands,\n\t\t\t'358',\n\t\t\t1\n\t\t]\n\t];\n}","export enum SearchCountryField {\n\tDialCode = 'dialCode',\n\tIso2 = 'iso2',\n\tName = 'name',\n\tAll = 'all'\n}\n","/* eslint-disable */\n/* tslint-disable */\n\nimport * as lpn from 'google-libphonenumber';\n\n/*\nWe use \"control: any\" instead of \"control: FormControl\" to silence:\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\nThis happens because I've expanded control with nativeElement via\n'NativeElementInjectorDirective' to get an access to the element.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\nexport const phoneNumberValidator = (control: any) => {\n\tif (!control.value) {\n\t\treturn;\n\t}\n\t// Find <input> inside injected nativeElement and get its \"id\".\n\tconst el: HTMLElement = control.nativeElement as HTMLElement;\n\tconst inputBox: HTMLInputElement = el\n\t\t? el.querySelector('input[type=\"tel\"]')\n\t\t: undefined;\n\tif (inputBox) {\n\t\tconst id = inputBox.id;\n\t\tconst isCheckValidation = inputBox.getAttribute('validation');\n\t\tif (isCheckValidation === 'true') {\n\t\t\tconst isRequired = control.errors && control.errors.required === true;\n\t\t\tconst error = { validatePhoneNumber: { valid: false } };\n\n\t\t\tinputBox.setCustomValidity('Invalid field.');\n\n\t\t\tlet number: lpn.PhoneNumber;\n\n\t\t\ttry {\n\t\t\t\tnumber = lpn.PhoneNumberUtil.getInstance().parse(\n\t\t\t\t\tcontrol.value.number,\n\t\t\t\t\tcontrol.value.countryCode\n\t\t\t\t);\n\t\t\t} catch (e) {\n\t\t\t\tif (isRequired === true) {\n\t\t\t\t\treturn error;\n\t\t\t\t} else {\n\t\t\t\t\tinputBox.setCustomValidity('');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (control.value) {\n\t\t\t\tif (!number) {\n\t\t\t\t\treturn error;\n\t\t\t\t} else {\n\t\t\t\t\tif (\n\t\t\t\t\t\t!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(\n\t\t\t\t\t\t\tnumber,\n\t\t\t\t\t\t\tcontrol.value.countryCode\n\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn error;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tinputBox.setCustomValidity('');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isCheckValidation === 'false') {\n\t\t\tinputBox.setCustomValidity('');\n\n\t\t\tcontrol.clearValidators();\n\t\t}\n\t}\n\treturn;\n};\n","export enum PhoneNumberFormat {\n\tInternational = 'INTERNATIONAL',\n\tNational = 'NATIONAL',\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { NgControl } from '@angular/forms';\n\n/*\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\n'NativeElementInjectorDirective' injects nativeElement to each control,\nso we can access it from inside validator for example.\nMore about this approach and reasons for this:\nhttps://github.com/angular/angular/issues/18025\nhttps://stackoverflow.com/a/54075119/1617590\n*/\n@Directive({\n\t// tslint:disable-next-line: directive-selector\n\tselector: '[ngModel], [formControl], [formControlName]',\n})\nexport class NativeElementInjectorDirective implements OnInit {\n\tconstructor(\n\t\tprivate controlDir: NgControl,\n\t\tprivate host: ElementRef<HTMLFormElement>\n\t) {}\n\tngOnInit() {\n\t\tif (this.controlDir.control) {\n\t\t\tthis.controlDir.control['nativeElement'] = this.host.nativeElement;\n\t\t}\n\t}\n}\n","/* eslint-disable */\n/* tslint-disable */\nimport * as lpn from 'google-libphonenumber';\n\nimport {\n\tComponent,\n\tElementRef,\n\tEventEmitter,\n\tforwardRef,\n\tInput,\n\tOnChanges,\n\tOnInit,\n\tOutput,\n\tSimpleChanges,\n\tViewChild,\n} from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { setTheme } from 'ngx-bootstrap/utils';\n\nimport { CountryCode } from './data/country-code';\nimport { CountryISO } from './enums/country-iso.enum';\nimport { SearchCountryField } from './enums/search-country-field.enum';\nimport type { ChangeData } from './interfaces/change-data';\nimport type { Country } from './model/country.model';\nimport { phoneNumberValidator } from './ngx-intl-tel-input.validator';\nimport { PhoneNumberFormat } from './enums/phone-number-format.enum';\n\n@Component({\n\t// tslint:disable-next-line: component-selector\n\tselector: 'ngx-intl-tel-input',\n\ttemplateUrl: './ngx-intl-tel-input.component.html',\n\tstyleUrls: ['./bootstrap-dropdown.css', './ngx-intl-tel-input.component.css'],\n\tproviders: [\n\t\tCountryCode,\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\t// tslint:disable-next-line:no-forward-ref\n\t\t\tuseExisting: forwardRef(() => NgxIntlTelInputComponent),\n\t\t\tmulti: true,\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tuseValue: phoneNumberValidator,\n\t\t\tmulti: true,\n\t\t},\n\t],\n})\nexport class NgxIntlTelInputComponent implements OnInit, OnChanges {\n\t@Input() value = '';\n\t@Input() preferredCountries: Array<string> = [];\n\t@Input() enablePlaceholder = true;\n\t@Input() customPlaceholder: string;\n\t@Input() numberFormat: PhoneNumberFormat = PhoneNumberFormat.International;\n\t@Input() cssClass = 'form-control';\n\t@Input() onlyCountries: Array<string> = [];\n\t@Input() enableAutoCountrySelect = true;\n\t@Input() searchCountryFlag = false;\n\t@Input() searchCountryField: SearchCountryField[] = [SearchCountryField.All];\n\t@Input() searchCountryPlaceholder = 'Search Country';\n\t@Input() maxLength = '';\n\t@Input() selectFirstCountry = true;\n\t@Input() selectedCountryISO: CountryISO;\n\t@Input() phoneValidation = true;\n\t@Input() inputId = 'phone';\n\t@Input() separateDialCode = false;\n\t@Input() defaultPhoneMask = '00 00 00 00';\n\tseparateDialCodeClass: string;\n\n\t@Output() readonly countryChange = new EventEmitter<Country>();\n\n\tselectedCountry: Country = {\n\t\tareaCodes: undefined,\n\t\tdialCode: '',\n\t\thtmlId: '',\n\t\tflagClass: '',\n\t\tiso2: '',\n\t\tname: '',\n\t\tplaceHolder: '',\n\t\tpriority: 0,\n\t};\n\n\tphoneNumber = '';\n\tallCountries: Array<Country> = [];\n\tpreferredCountriesInDropDown: Array<Country> = [];\n\t// Has to be 'any' to prevent a need to install @types/google-libphonenumber by the package user...\n\tphoneUtil: any = lpn.PhoneNumberUtil.getInstance();\n\tdisabled = false;\n\terrors: Array<any> = ['Phone number is required.'];\n\tcountrySearchText = '';\n\tpublic phoneMask = this.defaultPhoneMask;\n\n\t@ViewChild('countryList') countryList: ElementRef;\n\n\tonTouched = () => {};\n\tpropagateChange = (_: ChangeData) => {};\n\n\tconstructor(private countryCodeData: CountryCode) {\n\t\t// If this is not set, ngx-bootstrap will try to use the bs3 CSS (which is not what we've embedded) and will\n\t\t// Add the wrong classes and such\n\t\tsetTheme('bs4');\n\t}\n\n\tngOnInit() {\n\t\tthis.init();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tconst selectedISO = changes['selectedCountryISO'];\n\t\tif (\n\t\t\tthis.allCountries &&\n\t\t\tselectedISO &&\n\t\t\tselectedISO.currentValue !== selectedISO.previousValue\n\t\t) {\n\t\t\tthis.updateSelectedCountry();\n\t\t}\n\t\tif (changes.preferredCountries) {\n\t\t\tthis.updatePreferredCountries();\n\t\t}\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\t/*\n\t\tThis is a wrapper method to avoid calling this.ngOnInit() in writeValue().\n\t\tRef: http://codelyzer.com/rules/no-life-cycle-call/\n\t*/\n\tinit() {\n\t\tthis.fetchCountryData();\n\t\tif (this.preferredCountries.length) {\n\t\t\tthis.updatePreferredCountries();\n\t\t}\n\t\tif (this.onlyCountries.length) {\n\t\t\tthis.allCountries = this.allCountries.filter((c) =>\n\t\t\t\tthis.onlyCountries.includes(c.iso2)\n\t\t\t);\n\t\t}\n\t\tif (this.selectFirstCountry) {\n\t\t\tif (this.preferredCountriesInDropDown.length) {\n\t\t\t\tthis.setSelectedCountry(this.preferredCountriesInDropDown[0]);\n\t\t\t} else {\n\t\t\t\tthis.setSelectedCountry(this.allCountries[0]);\n\t\t\t}\n\t\t}\n\t\tthis.updateSelectedCountry();\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tsetSelectedCountry(country: Country) {\n\t\tthis.selectedCountry = country;\n\t\tthis.countryChange.emit(country);\n\t}\n\n\t/**\n\t * Search country based on country name, iso2, dialCode or all of them.\n\t */\n\tpublic searchCountry() {\n\t\tif (!this.countrySearchText) {\n\t\t\tthis.countryList.nativeElement\n\t\t\t\t.querySelector('.iti__country-list li')\n\t\t\t\t.scrollIntoView({\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\tblock: 'nearest',\n\t\t\t\t\tinline: 'nearest',\n\t\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconst countrySearchTextLower = this.countrySearchText.toLowerCase();\n\t\tconst country = this.allCountries.filter((c) => {\n\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.All) > -1) {\n\t\t\t\t// Search in all fields\n\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Or search by specific SearchCountryField(s)\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Iso2) > -1) {\n\t\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Name) > -1) {\n\t\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.DialCode) > -1) {\n\t\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (country.length > 0) {\n\t\t\tconst el = this.countryList.nativeElement.querySelector(\n\t\t\t\t'#' + country[0].htmlId\n\t\t\t);\n\t\t\tif (el) {\n\t\t\t\tel.scrollIntoView({\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\tblock: 'nearest',\n\t\t\t\t\tinline: 'nearest',\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tpublic onPhoneNumberChange(): void {\n\t\tlet countryCode: string | undefined;\n\t\t// Handle the case where the user sets the value programatically based on a persisted ChangeData obj.\n\t\tif (this.phoneNumber && typeof this.phoneNumber === 'object') {\n\t\t\tconst numberObj: ChangeData = this.phoneNumber;\n\t\t\tthis.phoneNumber = numberObj.number;\n\t\t\tcountryCode = numberObj.countryCode;\n\t\t}\n\n\t\tthis.value = this.phoneNumber;\n\t\tcountryCode = countryCode || this.selectedCountry.iso2;\n\t\tconst number = this.getParsedNumber(this.phoneNumber, countryCode);\n\n\t\t// auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\n\t\tif (this.enableAutoCountrySelect) {\n\t\t\tcountryCode =\n\t\t\t\tnumber && number.getCountryCode()\n\t\t\t\t\t? this.getCountryIsoCode(number.getCountryCode(), number)\n\t\t\t\t\t: this.selectedCountry.iso2;\n\t\t\tif (countryCode && countryCode !== this.selectedCountry.iso2) {\n\t\t\t\tconst newCountry = this.allCountries\n\t\t\t\t\t.sort((a, b) => {\n\t\t\t\t\t\treturn a.priority - b.priority;\n\t\t\t\t\t})\n\t\t\t\t\t.find((c) => c.iso2 === countryCode);\n\t\t\t\tif (newCountry) {\n\t\t\t\t\tthis.selectedCountry = newCountry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcountryCode = countryCode ? countryCode : this.selectedCountry.iso2;\n\n\t\tthis.checkSeparateDialCodeStyle();\n\n\t\tif (!this.value) {\n\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\tthis.propagateChange(null);\n\t\t} else {\n\t\t\tconst intlNo = number\n\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\n\t\t\t\t: '';\n\n\t\t\t// parse phoneNumber if separate dial code is needed\n\t\t\tif (this.separateDialCode && intlNo) {\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\n\t\t\t}\n\n\t\t\tthis.propagateChange({\n\t\t\t\tnumber: this.value,\n\t\t\t\tinternationalNumber: intlNo,\n\t\t\t\tnationalNumber: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\n\t\t\t\t\t: '',\n\t\t\t\te164Number: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\n\t\t\t\t\t: '',\n\t\t\t\tcountryCode: countryCode.toUpperCase(),\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic onCountrySelect(country: Country, el): void {\n\t\tconst countryPlaceholder = country.placeHolder.replace(/[0-9]/g, '0');\n\t\tif(countryPlaceholder) {\n\t\t\tthis.phoneMask = countryPlaceholder;\n\t\t}\n\t\tthis.setSelectedCountry(country);\n\n\t\tthis.checkSeparateDialCodeStyle();\n\n\t\tif (this.phoneNumber && this.phoneNumber.length > 0) {\n\t\t\tthis.value = this.phoneNumber;\n\t\t\tconst number = this.getParsedNumber(\n\t\t\t\tthis.phoneNumber,\n\t\t\t\tthis.selectedCountry.iso2\n\t\t\t);\n\t\t\tconst intlNo = number\n\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL)\n\t\t\t\t: '';\n\t\t\t// parse phoneNumber if separate dial code is needed\n\t\t\tif (this.separateDialCode && intlNo) {\n\t\t\t\tthis.value = this.removeDialCode(intlNo);\n\t\t\t}\n\n\t\t\tthis.propagateChange({\n\t\t\t\tnumber: this.value,\n\t\t\t\tinternationalNumber: intlNo,\n\t\t\t\tnationalNumber: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL)\n\t\t\t\t\t: '',\n\t\t\t\te164Number: number\n\t\t\t\t\t? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164)\n\t\t\t\t\t: '',\n\t\t\t\tcountryCode: this.selectedCountry.iso2.toUpperCase(),\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode,\n\t\t\t});\n\t\t} else {\n\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\tthis.propagateChange(null);\n\t\t}\n\n\t\tel.focus();\n\t}\n\n\tpublic onInputKeyPress(event: KeyboardEvent): void {\n\t\tconst allowedChars = /[0-9\\+\\-\\(\\)\\ ]/;\n\t\tconst allowedCtrlChars = /[axcv]/; // Allows copy-pasting\n\t\tconst allowedOtherKeys = [\n\t\t\t'ArrowLeft',\n\t\t\t'ArrowUp',\n\t\t\t'ArrowRight',\n\t\t\t'ArrowDown',\n\t\t\t'Home',\n\t\t\t'End',\n\t\t\t'Insert',\n\t\t\t'Delete',\n\t\t\t'Backspace',\n\t\t];\n\n\t\tif (\n\t\t\t!allowedChars.test(event.key) &&\n\t\t\t!(event.ctrlKey && allowedCtrlChars.test(event.key)) &&\n\t\t\t!allowedOtherKeys.includes(event.key)\n\t\t) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis.propagateChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\twriteValue(obj: any): void {\n\t\tif (obj === undefined) {\n\t\t\tthis.init();\n\t\t}\n\t\tthis.phoneNumber = obj;\n\t\tsetTimeout(() => {\n\t\t\tthis.onPhoneNumberChange();\n\t\t}, 1);\n\t}\n\n\tresolvePlaceholder(): string {\n\t\tlet placeholder = '';\n\t\tif (this.customPlaceholder) {\n\t\t\tplaceholder = this.customPlaceholder;\n\t\t} else if (this.selectedCountry.placeHolder) {\n\t\t\tplaceholder = this.selectedCountry.placeHolder;\n\t\t\tif (this.separateDialCode) {\n\t\t\t\tplaceholder = this.removeDialCode(placeholder);\n\t\t\t}\n\t\t}\n\t\treturn placeholder;\n\t}\n\n\t/* --------------------------------- Helpers -------------------------------- */\n\t/**\n\t * Returns parse PhoneNumber object.\n\t * @param phoneNumber string\n\t * @param countryCode string\n\t */\n\tprivate getParsedNumber(\n\t\tphoneNumber: string,\n\t\tcountryCode: string\n\t): lpn.PhoneNumber {\n\t\tlet number: lpn.PhoneNumber;\n\t\ttry {\n\t\t\tnumber = this.phoneUtil.parse(phoneNumber, countryCode.toUpperCase());\n\t\t} catch (e) {}\n\t\treturn number;\n\t}\n\n\t/**\n\t * Adjusts input alignment based on the dial code presentation style.\n\t */\n\tprivate checkSeparateDialCodeStyle() {\n\t\tif (this.separateDialCode && this.selectedCountry) {\n\t\t\tconst cntryCd = this.selectedCountry.dialCode;\n\t\t\tthis.separateDialCodeClass =\n\t\t\t\t'separate-dial-code iti-sdc-' + (cntryCd.length + 1);\n\t\t} else {\n\t\t\tthis.separateDialCodeClass = '';\n\t\t}\n\t}\n\n\t/**\n\t * Cleans dialcode from phone number string.\n\t * @param phoneNumber string\n\t */\n\tprivate removeDialCode(phoneNumber: string): string {\n\t\tconst number = this.getParsedNumber(phoneNumber, this.selectedCountry.iso2);\n\t\tphoneNumber = this.phoneUtil.format(\n\t\t\tnumber,\n\t\t\tlpn.PhoneNumberFormat[this.numberFormat]\n\t\t);\n\t\tif (phoneNumber.startsWith('+') && this.separateDialCode) {\n\t\t\tphoneNumber = phoneNumber.substr(phoneNumber.indexOf(' ') + 1);\n\t\t}\n\t\treturn phoneNumber;\n\t}\n\n\t/**\n\t * Sifts through all countries and returns iso code of the primary country\n\t * based on the number provided.\n\t * @param countryCode country code in number format\n\t * @param number PhoneNumber object\n\t */\n\tprivate getCountryIsoCode(\n\t\tcountryCode: number,\n\t\tnumber: lpn.PhoneNumber\n\t): string | undefined {\n\t\t// Will use this to match area code from the first numbers\n\t\tconst rawNumber = number['values_']['2'].toString();\n\t\t// List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\n\t\tconst countries = this.allCountries.filter(\n\t\t\t(c) => c.dialCode === countryCode.toString()\n\t\t);\n\t\t// Main country is the country, which has no areaCodes specified in country-code.ts file.\n\t\tconst mainCountry = countries.find((c) => c.areaCodes === undefined);\n\t\t// Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\n\t\tconst secondaryCountries = countries.filter(\n\t\t\t(c) => c.areaCodes !== undefined\n\t\t);\n\t\tlet matchedCountry = mainCountry ? mainCountry.iso2 : undefined;\n\n\t\t/*\n\t\t\tIterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\n\t\t\tIf no matches found, fallback to the main country.\n\t\t*/\n\t\tsecondaryCountries.forEach((country) => {\n\t\t\tcountry.areaCodes.forEach((areaCode) => {\n\t\t\t\tif (rawNumber.startsWith(areaCode)) {\n\t\t\t\t\tmatchedCountry = country.iso2;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn matchedCountry;\n\t}\n\n\t/**\n\t * Gets formatted example phone number from phoneUtil.\n\t * @param countryCode string\n\t */\n\tprotected getPhoneNumberPlaceHolder(countryCode: string): string {\n\t\ttry {\n\t\t\treturn this.phoneUtil.format(\n\t\t\t\tthis.phoneUtil.getExampleNumber(countryCode),\n\t\t\t\tlpn.PhoneNumberFormat[this.numberFormat]\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn e;\n\t\t}\n\t}\n\n\t/**\n\t * Clearing the list to avoid duplicates (https://github.com/webcat12345/ngx-intl-tel-input/issues/248)\n\t */\n\tprotected fetchCountryData(): void {\n\t\tthis.allCountries = [];\n\n\t\tthis.countryCodeData.allCountries.forEach((c) => {\n\t\t\tconst country: Country = {\n\t\t\t\tname: c[0].toString(),\n\t\t\t\tiso2: c[1].toString(),\n\t\t\t\tdialCode: c[2].toString(),\n\t\t\t\tpriority: +c[3] || 0,\n\t\t\t\tareaCodes: (c[4] as string[]) || undefined,\n\t\t\t\thtmlId: `iti-0__item-${c[1].toString()}`,\n\t\t\t\tflagClass: `iti__${c[1].toString().toLocaleLowerCase()}`,\n\t\t\t\tplaceHolder: '',\n\t\t\t};\n\n\t\t\tif (this.enablePlaceholder) {\n\t\t\t\tcountry.placeHolder = this.getPhoneNumberPlaceHolder(\n\t\t\t\t\tcountry.iso2.toUpperCase()\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthis.allCountries.push(country);\n\t\t});\n\t}\n\n\t/**\n\t * Populates preferredCountriesInDropDown with prefferred countries.\n\t */\n\tprivate updatePreferredCountries() {\n\t\tif (this.preferredCountries.length) {\n\t\t\tthis.preferredCountriesInDropDown = [];\n\t\t\tthis.preferredCountries.forEach((iso2) => {\n\t\t\t\tconst preferredCountry = this.allCountries.filter((c) => {\n\t\t\t\t\treturn c.iso2 === iso2;\n\t\t\t\t});\n\n\t\t\t\tthis.preferredCountriesInDropDown.push(preferredCountry[0]);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Updates selectedCountry.\n\t */\n\tprivate updateSelectedCountry() {\n\t\tif (this.selectedCountryISO) {\n\t\t\tthis.selectedCountry = this.allCountries.find((c) => {\n\t\t\t\treturn c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase();\n\t\t\t});\n\t\t\tif (this.selectedCountry) {\n\t\t\t\tif (this.phoneNumber) {\n\t\t\t\t\tthis.onPhoneNumberChange();\n\t\t\t\t} else {\n\t\t\t\t\t// Reason: avoid https://stackoverflow.com/a/54358133/1617590\n\t\t\t\t\t// tslint:disable-next-line: no-null-keyword\n\t\t\t\t\tthis.propagateChange(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n","<div class=\"iti iti--allow-dropdown\" [ngClass]=\"separateDialCodeClass\">\n\t<div\n\t\tclass=\"iti__flag-container\"\n\t\tdropdown\n\t\t[ngClass]=\"{ disabled: disabled }\"\n\t\t[isDisabled]=\"disabled\"\n\t>\n\t\t<div class=\"iti__selected-flag dropdown-toggle\" dropdownToggle>\n\t\t\t<div class=\"iti__flag\" [ngClass]=\"selectedCountry?.flagClass\"></div>\n\t\t\t<div *ngIf=\"separateDialCode\" class=\"selected-dial-code\">\n\t\t\t\t+{{ selectedCountry.dialCode }}\n\t\t\t</div>\n\t\t\t<div class=\"iti__arrow\"></div>\n\t\t</div>\n\t\t<div *dropdownMenu class=\"dropdown-menu country-dropdown\">\n\t\t\t<div\n\t\t\t\tclass=\"search-container\"\n\t\t\t\t*ngIf=\"searchCountryFlag && searchCountryField\"\n\t\t\t>\n\t\t\t\t<input\n\t\t\t\t\tid=\"country-search-box\"\n\t\t\t\t\t[(ngModel)]=\"countrySearchText\"\n\t\t\t\t\t(keyup)=\"searchCountry()\"\n\t\t\t\t\t(click)=\"$event.stopPropagation()\"\n\t\t\t\t\t[placeholder]=\"searchCountryPlaceholder\"\n\t\t\t\t\tautofocus\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<ul class=\"iti__country-list\" #countryList>\n\t\t\t\t<li\n\t\t\t\t\tclass=\"iti__country iti__preferred\"\n\t\t\t\t\t*ngFor=\"let country of preferredCountriesInDropDown\"\n\t\t\t\t\t(click)=\"onCountrySelect(country, focusable)\"\n\t\t\t\t\t[id]=\"country.htmlId + '-preferred'\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"iti__flag-box\">\n\t\t\t\t\t\t<div class=\"iti__flag\" [ngClass]=\"country.flagClass\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"iti__country-name\">{{ country.name }}</span>\n\t\t\t\t\t<span class=\"iti__dial-code\">+{{ country.dialCode }}</span>\n\t\t\t\t</li>\n\t\t\t\t<li\n\t\t\t\t\tclass=\"iti__divider\"\n\t\t\t\t\t*ngIf=\"preferredCountriesInDropDown?.length\"\n\t\t\t\t></li>\n\t\t\t\t<li\n\t\t\t\t\tclass=\"iti__country iti__standard\"\n\t\t\t\t\t*ngFor=\"let country of allCountries\"\n\t\t\t\t\t(click)=\"onCountrySelect(country, focusable)\"\n\t\t\t\t\t[id]=\"country.htmlId\"\n\t\t\t\t>\n\t\t\t\t\t<div class=\"iti__flag-box\">\n\t\t\t\t\t\t<div class=\"iti__flag\" [ngClass]=\"country.flagClass\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span class=\"iti__country-name\">{{ country.name }}</span>\n\t\t\t\t\t<span class=\"iti__dial-code\">+{{ country.dialCode }}</span>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n\t<input\n\t\ttype=\"tel\"\n\t\t[mask]=\"phoneMask\"\n\t\t[id]=\"inputId\"\n\t\tautocomplete=\"off\"\n\t\t[ngClass]=\"cssClass\"\n\t\t(blur)=\"onTouched()\"\n\t\t(keypress)=\"onInputKeyPress($event)\"\n\t\t[(ngModel)]=\"phoneNumber\"\n\t\t(ngModelChange)=\"onPhoneNumberChange()\"\n\t\t[disabled]=\"disabled\"\n\t\t[placeholder]=\"resolvePlaceholder()\"\n\t\t[attr.maxLength]=\"maxLength\"\n\t\t[attr.validation]=\"phoneValidation\"\n\t\t#focusable\n\t/>\n</div>\n","import { BsDropdownModule } from 'ngx-bootstrap/dropdown';\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { NativeElementInjectorDirective } from './directives/native-element-injector.directive';\nimport { NgxIntlTelInputComponent } from './ngx-intl-tel-input.component';\nimport { NgxMaskModule } from 'ngx-mask';\n\nexport const dropdownModuleForRoot: ModuleWithProviders<BsDropdownModule> = BsDropdownModule.forRoot();\n\n@NgModule({\n\tdeclarations: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tdropdownModuleForRoot,\n\t\tNgxMaskModule.forRoot(),\n  ],\n\n\texports: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\n})\nexport class NgxIntlTelInputModule {\n\n}\n","/*\n * Public API Surface of ngx-intl-tel-input\n */\n\nexport * from './lib/ngx-intl-tel-input.component';\nexport * from './lib/directives/native-element-injector.directive';\nexport * from './lib/ngx-intl-tel-input.module';\nexport * from './lib/enums/country-iso.enum';\nexport * from './lib/enums/search-country-field.enum';\nexport * from './lib/enums/phone-number-format.enum';\nexport * from './lib/interfaces/change-data';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["CountryISO","i0","Injectable","SearchCountryField","lpn","PhoneNumberFormat","i1","Directive","EventEmitter","setTheme","i1.CountryCode","NG_VALUE_ACCESSOR","forwardRef","NG_VALIDATORS","Component","Input","Output","ViewChild","BsDropdownModule","CommonModule","FormsModule","ReactiveFormsModule","NgxMaskModule","NgModule","i2"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAYA,gCAoPX;IApPD,CAAA,UAAY,UAAU,EAAA;IACrB,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,eAAA,CAAA,GAAA,IAAoB,CAAA;IACpB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,mBAAA,CAAA,GAAA,IAAwB,CAAA;IACxB,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,sBAAA,CAAA,GAAA,IAA2B,CAAA;IAC3B,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,6BAAA,CAAA,GAAA,IAAkC,CAAA;IAClC,IAAA,UAAA,CAAA,sBAAA,CAAA,GAAA,IAA2B,CAAA;IAC3B,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,sBAAA,CAAA,GAAA,IAA2B,CAAA;IAC3B,IAAA,UAAA,CAAA,eAAA,CAAA,GAAA,IAAoB,CAAA;IACpB,IAAA,UAAA,CAAA,wBAAA,CAAA,GAAA,IAA6B,CAAA;IAC7B,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,IAAsB,CAAA;IACtB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,sCAAA,CAAA,GAAA,IAA2C,CAAA;IAC3C,IAAA,UAAA,CAAA,+BAAA,CAAA,GAAA,IAAoC,CAAA;IACpC,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,kBAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,cAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,eAAA,CAAA,GAAA,IAAoB,CAAA;IACpB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,mBAAA,CAAA,GAAA,IAAwB,CAAA;IACxB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,kBAAA,CAAA,GAAA,IAAuB,CAAA;IACvB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,IAAsB,CAAA;IACtB,IAAA,UAAA,CAAA,cAAA,CAAA,GAAA,IAAmB,CAAA;IACnB,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,cAAA,CAAA,GAAA,IAAmB,CAAA;IACnB,IAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,IAAsB,CAAA;IACtB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,cAAA,CAAA,GAAA,IAAmB,CAAA;IACnB,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,eAAA,CAAA,GAAA,IAAoB,CAAA;IACpB,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,IAAsB,CAAA;IACtB,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,cAAA,CAAA,GAAA,IAAmB,CAAA;IACnB,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,eAAA,CAAA,GAAA,IAAoB,CAAA;IACpB,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,wBAAA,CAAA,GAAA,IAA6B,CAAA;IAC7B,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,gBAAA,CAAA,GAAA,IAAqB,CAAA;IACrB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,cAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,sBAAA,CAAA,GAAA,IAAsB,CAAA;IACtB,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,oBAAA,CAAA,GAAA,IAAyB,CAAA;IACzB,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,wBAAA,CAAA,GAAA,IAA6B,CAAA;IAC7B,IAAA,UAAA,CAAA,8BAAA,CAAA,GAAA,IAAmC,CAAA;IACnC,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,mCAAA,CAAA,GAAA,IAAyB,CAAA;IACzB,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,gBAAA,CAAA,GAAA,IAAqB,CAAA;IACrB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,qBAAA,CAAA,GAAA,IAA0B,CAAA;IAC1B,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,MAAA,CAAA,GAAA,IAAW,CAAA;IACX,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,mBAAA,CAAA,GAAA,IAAwB,CAAA;IACxB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,cAAA,CAAA,GAAA,IAAmB,CAAA;IACnB,IAAA,UAAA,CAAA,uBAAA,CAAA,GAAA,IAA4B,CAAA;IAC5B,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,IAAsB,CAAA;IACtB,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,oBAAA,CAAA,GAAA,IAAyB,CAAA;IACzB,IAAA,UAAA,CAAA,eAAA,CAAA,GAAA,IAAoB,CAAA;IACpB,IAAA,UAAA,CAAA,cAAA,CAAA,GAAA,IAAmB,CAAA;IACnB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,YAAA,CAAA,GAAA,IAAiB,CAAA;IACjB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,aAAA,CAAA,GAAA,IAAkB,CAAA;IAClB,IAAA,UAAA,CAAA,WAAA,CAAA,GAAA,IAAgB,CAAA;IAChB,IAAA,UAAA,CAAA,SAAA,CAAA,GAAA,IAAc,CAAA;IACd,IAAA,UAAA,CAAA,iBAAA,CAAA,GAAA,IAAsB,CAAA;IACtB,IAAA,UAAA,CAAA,eAAA,CAAA,GAAA,IAAoB,CAAA;IACpB,IAAA,UAAA,CAAA,OAAA,CAAA,GAAA,IAAY,CAAA;IACZ,IAAA,UAAA,CAAA,QAAA,CAAA,GAAA,IAAa,CAAA;IACb,IAAA,UAAA,CAAA,UAAA,CAAA,GAAA,IAAe,CAAA;IACf,IAAA,UAAA,CAAA,mBAAA,CAAA,GAAA,IAAmB,CAAA;IACpB,CAAC,EApPWA,kBAAU,KAAVA,kBAAU,GAoPrB,EAAA,CAAA,CAAA;;IChPD,IAAA,WAAA,kBAAA,YAAA;IADA,IAAA,SAAA,WAAA,GAAA;YAEQ,IAAA,CAAA,YAAY,GAAG;IACrB,YAAA;oBACC,4BAA4B;IAC5B,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,sBAAsB;IACtB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,gBAAgB;oBAChB,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;oBACV,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,qBAAqB;oBACrB,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,WAAW;IACX,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,OAAO;IACP,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,WAAW;IACX,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,IAAI;oBACJ,CAAC;IACD,aAAA;IACD,YAAA;oBACC,sBAAsB;IACtB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,yBAAyB;IACzB,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;oBACT,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,sBAAsB;IACtB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,uBAAuB;IACvB,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;oBACV,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,eAAe;IACf,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;oBACT,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,gBAAgB;IAChB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,8CAA8C;IAC9C,gBAAAA,kBAAU,CAAC,oBAAoB;oBAC/B,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,gCAAgC;IAChC,gBAAAA,kBAAU,CAAC,2BAA2B;oBACtC,KAAK;IACL,aAAA;IACD,YAAA;oBACC,wBAAwB;oBACxB,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,qBAAqB;IACrB,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,cAAc;IACd,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,qBAAqB;IACrB,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;wBAClF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;wBAClF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;wBAClF,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACxC,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,yBAAyB;IACzB,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,uBAAuB;IACvB,gBAAAA,kBAAU,CAAC,oBAAoB;oBAC/B,KAAK;oBACL,CAAC;IACD,aAAA;IACD,YAAA;oBACC,gBAAgB;oBAChB,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,sDAAsD;IACtD,gBAAAA,kBAAU,CAAC,sBAAsB;oBACjC,KAAK;IACL,aAAA;IACD,YAAA;oBACC,cAAc;IACd,gBAAAA,kBAAU,CAAC,IAAI;oBACf,KAAK;IACL,aAAA;IACD,YAAA;oBACC,OAAO;IACP,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,eAAe;oBAC1B,IAAI;oBACJ,CAAC;IACD,aAAA;IACD,YAAA;oBACC,yBAAyB;IACzB,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,IAAI;oBACJ,CAAC;IACD,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,wBAAwB;IACxB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,gDAAgD;IAChD,gBAAAA,kBAAU,CAAC,oCAAoC;oBAC/C,KAAK;IACL,aAAA;IACD,YAAA;oBACC,sCAAsC;IACtC,gBAAAA,kBAAU,CAAC,6BAA6B;oBACxC,KAAK;IACL,aAAA;IACD,YAAA;oBACC,cAAc;IACd,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,eAAe;IACf,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,MAAM;IACN,gBAAAA,kBAAU,CAAC,IAAI;oBACf,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;oBACL,CAAC;IACD,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,kCAAkC;IAClC,gBAAAA,kBAAU,CAAC,aAAa;oBACxB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,mBAAmB;IACnB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,MAAM;IACN,aAAA;IACD,YAAA;oBACC,2CAA2C;IAC3C,gBAAAA,kBAAU,CAAC,iBAAiB;oBAC5B,GAAG;oBACH,CAAC;IACD,gBAAA,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACrB,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,gBAAgB;IAChB,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,aAAa;IACb,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,uCAAuC;IACvC,gBAAAA,kBAAU,CAAC,gBAAgB;oBAC3B,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,mCAAmC;IACnC,gBAAAA,kBAAU,CAAC,eAAe;oBAC1B,KAAK;IACL,aAAA;IACD,YAAA;oBACC,yBAAyB;IACzB,gBAAAA,kBAAU,CAAC,YAAY;oBACvB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,MAAM;IACN,gBAAAA,kBAAU,CAAC,IAAI;oBACf,KAAK;IACL,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;oBACL,CAAC;IACD,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,kCAAkC;IAClC,gBAAAA,kBAAU,CAAC,YAAY;oBACvB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,wCAAwC;IACxC,gBAAAA,kBAAU,CAAC,eAAe;oBAC1B,KAAK;IACL,aAAA;IACD,YAAA;oBACC,OAAO;IACP,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,sBAAsB;IACtB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,uBAAuB;IACvB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,eAAe;IACf,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,WAAW;IACX,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,8BAA8B;IAC9B,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,MAAM;IACN,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;oBACL,CAAC;IACD,aAAA;IACD,YAAA;oBACC,MAAM;oBACN,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,WAAW;IACX,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,IAAI;oBACJ,CAAC;IACD,gBAAA,CAAC,IAAI,CAAC;IACN,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,8BAA8B;IAC9B,gBAAAA,kBAAU,CAAC,YAAY;oBACvB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,OAAO;IACP,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,gBAAgB;IAChB,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,wBAAwB;IACxB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,cAAc;IACd,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,WAAW;IACX,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,IAAI;oBACf,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,IAAI;oBACf,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,aAAa;IACb,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,IAAI;oBACJ,CAAC;IACD,gBAAA,CAAC,IAAI,CAAC;IACN,aAAA;IACD,YAAA;oBACC,mBAAmB;IACnB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,gBAAgB;IAChB,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,IAAI;oBACJ,CAAC;IACD,aAAA;IACD,YAAA;oBACC,SAAS;oBACT,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,IAAI;oBACJ,CAAC;IACD,gBAAA,CAAC,IAAI,CAAC;IACN,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,wBAAwB;IACxB,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,GAAG;oBACH,CAAC;IACD,aAAA;IACD,YAAA;oBACC,OAAO;IACP,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,yBAAyB;IACzB,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,IAAI;oBACf,KAAK;IACL,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,eAAe;IACf,gBAAAA,kBAAU,CAAC,aAAa;oBACxB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,qBAAqB;IACrB,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,gCAAgC;IAChC,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,2BAA2B;IAC3B,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,MAAM;IACN,gBAAAA,kBAAU,CAAC,IAAI;oBACf,KAAK;IACL,aAAA;IACD,YAAA;oBACC,OAAO;IACP,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,eAAe;oBAC1B,KAAK;IACL,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,2BAA2B;IAC3B,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,mBAAmB;IACnB,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;oBACL,CAAC;IACD,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,6BAA6B;IAC7B,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,mBAAmB;IACnB,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,wBAAwB;IACxB,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,YAAY;oBACZ,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,qBAAqB;IACrB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;oBACL,CAAC;IACD,aAAA;IACD,YAAA;oBACC,yBAAyB;IACzB,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,0BAA0B;IAC1B,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,mBAAmB;IACnB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,OAAO;IACP,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,eAAe;IACf,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,yBAAyB;IACzB,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,oCAAoC;IACpC,gBAAAA,kBAAU,CAAC,YAAY;oBACvB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,aAAa;IACb,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,WAAW;IACX,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,eAAe;IACf,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,MAAM;IACN,gBAAAA,kBAAU,CAAC,IAAI;oBACf,KAAK;IACL,aAAA;IACD,YAAA;oBACC,gBAAgB;IAChB,gBAAAA,kBAAU,CAAC,aAAa;oBACxB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,8BAA8B;IAC9B,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,0BAA0B;IAC1B,gBAAAA,kBAAU,CAAC,sBAAsB;oBACjC,MAAM;IACN,aAAA;IACD,YAAA;oBACC,gBAAgB;IAChB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,IAAI;oBACJ,CAAC;IACD,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,IAAI;oBACf,KAAK;IACL,aAAA;IACD,YAAA;oBACC,uBAAuB;IACvB,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,OAAO;IACP,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,uBAAuB;IACvB,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,cAAc;oBACzB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,aAAa;IACb,gBAAAA,kBAAU,CAAC,IAAI;oBACf,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,aAAa;IACb,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,aAAa;IACb,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,GAAG;oBACH,CAAC;oBACD,CAAC,KAAK,EAAE,KAAK,CAAC;IACd,aAAA;IACD,YAAA;oBACC,gBAAgB;IAChB,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,sBAAsB;IACtB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;oBACL,CAAC;IACD,aAAA;IACD,YAAA;oBACC,mBAAmB;IACnB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,GAAG;oBACH,CAAC;IACD,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,qCAAqC;IACrC,gBAAAA,kBAAU,CAAC,eAAe;oBAC1B,KAAK;oBACL,CAAC;IACD,aAAA;IACD,YAAA;oBACC,cAAc;IACd,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,uBAAuB;IACvB,gBAAAA,kBAAU,CAAC,kBAAkB;oBAC7B,MAAM;IACN,aAAA;IACD,YAAA;oBACC,aAAa;oBACb,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,gDAAgD;IAChD,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,KAAK;oBACL,CAAC;IACD,aAAA;IACD,YAAA;oBACC,sDAAsD;IACtD,gBAAAA,kBAAU,CAAC,sBAAsB;oBACjC,KAAK;IACL,aAAA;IACD,YAAA;oBACC,kCAAkC;oBAClC,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,OAAO;IACP,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,6CAA6C;IAC7C,gBAAAA,kBAAU,CAAC,kBAAkB;oBAC7B,KAAK;IACL,aAAA;IACD,YAAA;oBACC,4CAA4C;IAC5C,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,mBAAmB;IACnB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,cAAc;IACd,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,WAAW;IACX,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,cAAc;oBACd,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,sBAAsB;IACtB,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,sBAAsB;IACtB,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,iBAAiB;IACjB,gBAAAA,kBAAU,CAAC,cAAc;oBACzB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,sBAAsB;IACtB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,cAAc;IACd,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,+BAA+B;IAC/B,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,gBAAgB;IAChB,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,yBAAyB;IACzB,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,wBAAwB;IACxB,gBAAAA,kBAAU,CAAC,mBAAmB;oBAC9B,IAAI;oBACJ,CAAC;IACD,aAAA;IACD,YAAA;oBACC,WAAW;IACX,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,uBAAuB;IACvB,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,aAAa;IACb,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,YAAY;IACZ,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,gBAAgB;IAChB,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,aAAa;IACb,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,MAAM;IACN,gBAAAA,kBAAU,CAAC,IAAI;oBACf,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,OAAO;IACP,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,qBAAqB;oBACrB,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,mBAAmB;IACnB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,cAAc;IACd,gBAAAA,kBAAU,CAAC,YAAY;oBACvB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,0BAA0B;IAC1B,gBAAAA,kBAAU,CAAC,qBAAqB;oBAChC,MAAM;IACN,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,qBAAqB;oBACrB,IAAI;oBACJ,GAAG;oBACH,CAAC;IACD,gBAAA;wBACC,KAAK;IACL,iBAAA;IACD,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,mBAAmB;IACnB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,oDAAoD;IACpD,gBAAAA,kBAAU,CAAC,kBAAkB;oBAC7B,KAAK;IACL,aAAA;IACD,YAAA;oBACC,gBAAgB;IAChB,gBAAAA,kBAAU,CAAC,aAAa;oBACxB,IAAI;oBACJ,CAAC;IACD,aAAA;IACD,YAAA;oBACC,eAAe;IACf,gBAAAA,kBAAU,CAAC,YAAY;oBACvB,GAAG;oBACH,CAAC;IACD,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,0BAA0B;IAC1B,gBAAAA,kBAAU,CAAC,UAAU;oBACrB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,SAAS;IACT,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,mCAAmC;IACnC,gBAAAA,kBAAU,CAAC,WAAW;oBACtB,IAAI;oBACJ,CAAC;IACD,aAAA;IACD,YAAA;oBACC,WAAW;IACX,gBAAAA,kBAAU,CAAC,SAAS;oBACpB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,oBAAoB;IACpB,gBAAAA,kBAAU,CAAC,OAAO;oBAClB,IAAI;IACJ,aAAA;IACD,YAAA;oBACC,mBAAmB;IACnB,gBAAAA,kBAAU,CAAC,eAAe;oBAC1B,KAAK;IACL,aAAA;IACD,YAAA;oBACC,qCAAqC;IACrC,gBAAAA,kBAAU,CAAC,aAAa;oBACxB,KAAK;oBACL,CAAC;IACD,aAAA;IACD,YAAA;oBACC,kBAAkB;IAClB,gBAAAA,kBAAU,CAAC,KAAK;oBAChB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,QAAQ;IACR,gBAAAA,kBAAU,CAAC,MAAM;oBACjB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,UAAU;IACV,gBAAAA,kBAAU,CAAC,QAAQ;oBACnB,KAAK;IACL,aAAA;IACD,YAAA;oBACC,eAAe;IACf,gBAAAA,kBAAU,CAAC,YAAY;oBACvB,KAAK;oBACL,CAAC;IACD,aAAA;aACD,CAAC;SACF;;;0EAzyCY,WAAW,GAAA,CAAA,EAAA,CAAA;IAAX,WAAA,CAAA,KAAA,iBAAAC,aAAA,CAAA,kBAAA,CAAA,EAAA,KAAA,EAAA,WAAW,WAAX,WAAW,CAAA,IAAA,EAAA,CAAA,CAAA;;2FAAX,WAAW,EAAA,CAAA;sBADvBC,aAAU;;;;ACHCC,wCAKX;IALD,CAAA,UAAY,kBAAkB,EAAA;IAC7B,IAAA,kBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;IACrB,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;IACb,IAAA,kBAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;IACb,IAAA,kBAAA,CAAA,KAAA,CAAA,GAAA,KAAW,CAAA;IACZ,CAAC,EALWA,0BAAkB,KAAlBA,0BAAkB,GAK7B,EAAA,CAAA,CAAA;;ICLD;IAKA;;;;;;;;IAQE;IACK,IAAM,oBAAoB,GAAG,UAAC,OAAY,EAAA;IAChD,IAAA,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE;YACnB,OAAO;IACP,KAAA;;IAED,IAAA,IAAM,EAAE,GAAgB,OAAO,CAAC,aAA4B,CAAC;QAC7D,IAAM,QAAQ,GAAqB,EAAE;IACpC,UAAE,EAAE,CAAC,aAAa,CAAC,mBAAmB,CAAC;cACrC,SAAS,CAAC;IACb,IAAA,IAAI,QAAQ,EAAE;IACb,QAAA,IAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,CAAC;YACvB,IAAM,iBAAiB,GAAG,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAC9D,IAAI,iBAAiB,KAAK,MAAM,EAAE;IACjC,YAAA,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC;gBACtE,IAAM,KAAK,GAAG,EAAE,mBAAmB,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,CAAC;IAExD,YAAA,QAAQ,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;gBAE7C,IAAI,MAAuB,SAAA,CAAC;gBAE5B,IAAI;oBACH,MAAM,GAAGC,cAAG,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,KAAK,CAC/C,OAAO,CAAC,KAAK,CAAC,MAAM,EACpB,OAAO,CAAC,KAAK,CAAC,WAAW,CACzB,CAAC;IACF,aAAA;IAAC,YAAA,OAAO,CAAC,EAAE;oBACX,IAAI,UAAU,KAAK,IAAI,EAAE;IACxB,oBAAA,OAAO,KAAK,CAAC;IACb,iBAAA;IAAM,qBAAA;IACN,oBAAA,QAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAC/B,iBAAA;IACD,aAAA;gBAED,IAAI,OAAO,CAAC,KAAK,EAAE;oBAClB,IAAI,CAAC,MAAM,EAAE;IACZ,oBAAA,OAAO,KAAK,CAAC;IACb,iBAAA;IAAM,qBAAA;IACN,oBAAA,IACC,CAACA,cAAG,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,sBAAsB,CACxD,MAAM,EACN,OAAO,CAAC,KAAK,CAAC,WAAW,CACzB,EACA;IACD,wBAAA,OAAO,KAAK,CAAC;IACb,qBAAA;IAAM,yBAAA;IACN,wBAAA,QAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;IAC/B,qBAAA;IACD,iBAAA;IACD,aAAA;IACD,SAAA;iBAAM,IAAI,iBAAiB,KAAK,OAAO,EAAE;IACzC,YAAA,QAAQ,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;gBAE/B,OAAO,CAAC,eAAe,EAAE,CAAC;IAC1B,SAAA;IACD,KAAA;QACD,OAAO;IACR,CAAC;;ACtEWC,uCAGX;IAHD,CAAA,UAAY,iBAAiB,EAAA;IAC5B,IAAA,iBAAA,CAAA,eAAA,CAAA,GAAA,eAA+B,CAAA;IAC/B,IAAA,iBAAA,CAAA,UAAA,CAAA,GAAA,UAAqB,CAAA;IACtB,CAAC,EAHWA,yBAAiB,KAAjBA,yBAAiB,GAG5B,EAAA,CAAA,CAAA;;ICAD;;;;;;;IAOE;AAKF,QAAA,8BAAA,kBAAA,YAAA;QACC,SACS,8BAAA,CAAA,UAAqB,EACrB,IAAiC,EAAA;IADjC,QAAA,IAAU,CAAA,UAAA,GAAV,UAAU,CAAW;IACrB,QAAA,IAAI,CAAA,IAAA,GAAJ,IAAI,CAA6B;SACtC;IACJ,IAAA,8BAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;IACC,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;IAC5B,YAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;IACnE,SAAA;SACD,CAAA;;;gHATW,8BAA8B,EAAAJ,aAAA,CAAA,iBAAA,CAAAK,aAAA,CAAA,SAAA,CAAA,EAAAL,aAAA,CAAA,iBAAA,CAAAA,aAAA,CAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA;gGAA9B,8BAA8B,EAAA,SAAA,EAAA,CAAA,CAAA,EAAA,EAAA,SAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,aAAA,EAAA,EAAA,CAAA,EAAA,CAAA,EAAA,EAAA,iBAAA,EAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;2FAA9B,8BAA8B,EAAA,CAAA;sBAJ1CM,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;;IAEV,oBAAA,QAAQ,EAAE,6CAA6C;qBACvD,CAAA;;;;ICdD;;;;YCSGN,aAAyD,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;IACxD,QAAAA,aACD,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;YAAAA,aAAM,CAAA,YAAA,EAAA,CAAA;;;;IADL,QAAAA,aACD,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IADC,QAAAA,aACD,CAAA,kBAAA,CAAA,IAAA,EAAA,MAAA,CAAA,eAAA,CAAA,QAAA,EAAA,GAAA,CAAA,CAAA;;;;;;YAIAA,aAGC,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;YACAA,aAOE,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,EAAA,CAAA,CAAA;IALD,QAAAA,aAA+B,CAAA,UAAA,CAAA,eAAA,EAAA,SAAA,4EAAA,CAAA,MAAA,IAAAA,aAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAA,CAAA,IAAA,MAAA,GAAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,MAAA,CAAA,iBAAA,GAAA,MAAA,CAAA,EAAA,CAAA,CAAA,OAAA,EAAA,SAAA,oEAAA,GAAA,EAAAA,aAAA,CAAA,aAAA,CAAA,KAAA,CAAA,CAAA,CAAA,IAAA,OAAA,GAAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,OAAA,CAAA,aAAA,EAAA,CAAA,EAAA,CAAA,CAEtB,OAAA,EAAA,SAAA,oEAAA,CAAA,MAAA,IAAA,OAAA,MAAA,CAAA,eAAA,EAAwB,CAFF,EAAA,CAAA,CAAA;YAFhCA,aAOE,CAAA,YAAA,EAAA,CAAA;YACHA,aAAM,CAAA,YAAA,EAAA,CAAA;;;;IANJ,QAAAA,aAA+B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA/B,QAAAA,aAAA,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,iBAAA,CAA+B,CAAA,aAAA,EAAA,MAAA,CAAA,wBAAA,CAAA,CAAA;;;;;;YAQhCA,aAKC,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IAFA,QAAAA,aAA6C,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gEAAA,GAAA,EAAA,IAAA,WAAA,GAAAA,aAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,WAAA,GAAA,WAAA,CAAA,SAAA,CAAA,CAAA,IAAA,OAAA,GAAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,GAAA,GAAAA,aAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,OAAA,CAAA,eAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;YAG7CA,aAA2B,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;YAC1BA,aAA2D,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;YAC5DA,aAAM,CAAA,YAAA,EAAA,CAAA;YACNA,aAAgC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAAA,QAAAA,aAAkB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;YAAAA,aAAO,CAAA,YAAA,EAAA,CAAA;YACzDA,aAA6B,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAAA,QAAAA,aAAuB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;YAAAA,aAAO,CAAA,YAAA,EAAA,CAAA;YAC5DA,aAAK,CAAA,YAAA,EAAA,CAAA;;;;YAPJA,aAAoC,CAAA,UAAA,CAAA,IAAA,EAAA,WAAA,CAAA,MAAA,GAAA,YAAA,CAAA,CAAA;IAGZ,QAAAA,aAA6B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAA7BA,aAA6B,CAAA,UAAA,CAAA,SAAA,EAAA,WAAA,CAAA,SAAA,CAAA,CAAA;IAErB,QAAAA,aAAkB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAlB,QAAAA,aAAkB,CAAA,iBAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CAAA;IACrB,QAAAA,aAAuB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAAvBA,aAAuB,CAAA,kBAAA,CAAA,GAAA,EAAA,WAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA;;;;;YAErDA,aAGM,CAAA,SAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;;;;;;YACNA,aAKC,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IAFA,QAAAA,aAA6C,CAAA,UAAA,CAAA,OAAA,EAAA,SAAA,gEAAA,GAAA,EAAA,IAAA,WAAA,GAAAA,aAAA,CAAA,aAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,WAAA,GAAA,WAAA,CAAA,SAAA,CAAA,CAAA,IAAA,OAAA,GAAAA,aAAA,CAAA,aAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,GAAA,GAAAA,aAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,CAAA,OAAA,OAAA,CAAA,eAAA,CAAA,WAAA,EAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;YAG7CA,aAA2B,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;YAC1BA,aAA2D,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;YAC5DA,aAAM,CAAA,YAAA,EAAA,CAAA;YACNA,aAAgC,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAAA,QAAAA,aAAkB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;YAAAA,aAAO,CAAA,YAAA,EAAA,CAAA;YACzDA,aAA6B,CAAA,cAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,CAAA;IAAA,QAAAA,aAAuB,CAAA,MAAA,CAAA,CAAA,CAAA,CAAA;YAAAA,aAAO,CAAA,YAAA,EAAA,CAAA;YAC5DA,aAAK,CAAA,YAAA,EAAA,CAAA;;;;YAPJA,aAAqB,CAAA,UAAA,CAAA,IAAA,EAAA,WAAA,CAAA,MAAA,CAAA,CAAA;IAGG,QAAAA,aAA6B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAA7BA,aAA6B,CAAA,UAAA,CAAA,SAAA,EAAA,WAAA,CAAA,SAAA,CAAA,CAAA;IAErB,QAAAA,aAAkB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAAlB,QAAAA,aAAkB,CAAA,iBAAA,CAAA,WAAA,CAAA,IAAA,CAAA,CAAA;IACrB,QAAAA,aAAuB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAAvBA,aAAuB,CAAA,kBAAA,CAAA,GAAA,EAAA,WAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA;;;;;YAzCvDA,aAA0D,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;IACzD,QAAAA,aAYM,CAAA,UAAA,CAAA,CAAA,EAAA,6CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,CAAA;YACNA,aAA2C,CAAA,cAAA,CAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,CAAA,CAAA;IAC1C,QAAAA,aAWK,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IACL,QAAAA,aAGM,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;IACN,QAAAA,aAWK,CAAA,UAAA,CAAA,CAAA,EAAA,4CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,CAAA;YACNA,aAAK,CAAA,YAAA,EAAA,CAAA;YACNA,aAAM,CAAA,YAAA,EAAA,CAAA;;;;IAzCH,QAAAA,aAA6C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;IAA7C,QAAAA,aAA6C,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,iBAAA,IAAA,MAAA,CAAA,kBAAA,CAAA,CAAA;IAczB,QAAAA,aAA+B,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAA/BA,aAA+B,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,4BAAA,CAAA,CAAA;IAYlD,QAAAA,aAA0C,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAA1CA,aAA0C,CAAA,UAAA,CAAA,MAAA,EAAA,MAAA,CAAA,4BAAA,IAAA,IAAA,GAAA,IAAA,GAAA,MAAA,CAAA,4BAAA,CAAA,MAAA,CAAA,CAAA;IAIvB,QAAAA,aAAe,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;YAAfA,aAAe,CAAA,UAAA,CAAA,SAAA,EAAA,MAAA,CAAA,YAAA,CAAA,CAAA;;;;ADCxC,QAAA,wBAAA,kBAAA,YAAA;IAiDC,IAAA,SAAA,wBAAA,CAAoB,eAA4B,EAAA;IAA5B,QAAA,IAAe,CAAA,eAAA,GAAf,eAAe,CAAa;IAhDvC,QAAA,IAAK,CAAA,KAAA,GAAG,EAAE,CAAC;IACX,QAAA,IAAkB,CAAA,kBAAA,GAAkB,EAAE,CAAC;IACvC,QAAA,IAAiB,CAAA,iBAAA,GAAG,IAAI,CAAC;IAEzB,QAAA,IAAA,CAAA,YAAY,GAAsBI,yBAAiB,CAAC,aAAa,CAAC;IAClE,QAAA,IAAQ,CAAA,QAAA,GAAG,cAAc,CAAC;IAC1B,QAAA,IAAa,CAAA,aAAA,GAAkB,EAAE,CAAC;IAClC,QAAA,IAAuB,CAAA,uBAAA,GAAG,IAAI,CAAC;IAC/B,QAAA,IAAiB,CAAA,iBAAA,GAAG,KAAK,CAAC;YAC1B,IAAA,CAAA,kBAAkB,GAAyB,CAACF,0BAAkB,CAAC,GAAG,CAAC,CAAC;IACpE,QAAA,IAAwB,CAAA,wBAAA,GAAG,gBAAgB,CAAC;IAC5C,QAAA,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;IACf,QAAA,IAAkB,CAAA,kBAAA,GAAG,IAAI,CAAC;IAE1B,QAAA,IAAe,CAAA,eAAA,GAAG,IAAI,CAAC;IACvB,QAAA,IAAO,CAAA,OAAA,GAAG,OAAO,CAAC;IAClB,QAAA,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;IACzB,QAAA,IAAgB,CAAA,gBAAA,GAAG,aAAa,CAAC;IAGvB,QAAA,IAAA,CAAA,aAAa,GAAG,IAAIK,eAAY,EAAW,CAAC;YAE/D,IAAA,CAAA,eAAe,GAAY;IAC1B,YAAA,SAAS,EAAE,SAAS;IACpB,YAAA,QAAQ,EAAE,EAAE;IACZ,YAAA,MAAM,EAAE,EAAE;IACV,YAAA,SAAS,EAAE,EAAE;IACb,YAAA,IAAI,EAAE,EAAE;IACR,YAAA,IAAI,EAAE,EAAE;IACR,YAAA,WAAW,EAAE,EAAE;IACf,YAAA,QAAQ,EAAE,CAAC;aACX,CAAC;IAEF,QAAA,IAAW,CAAA,WAAA,GAAG,EAAE,CAAC;IACjB,QAAA,IAAY,CAAA,YAAA,GAAmB,EAAE,CAAC;IAClC,QAAA,IAA4B,CAAA,4BAAA,GAAmB,EAAE,CAAC;;YAElD,IAAA,CAAA,SAAS,GAAQJ,cAAG,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;IACnD,QAAA,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;IACjB,QAAA,IAAA,CAAA,MAAM,GAAe,CAAC,2BAA2B,CAAC,CAAC;IACnD,QAAA,IAAiB,CAAA,iBAAA,GAAG,EAAE,CAAC;IAChB,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAIzC,QAAA,IAAA,CAAA,SAAS,GAAG,YAAA,GAAQ,CAAC;IACrB,QAAA,IAAA,CAAA,eAAe,GAAG,UAAC,CAAa,EAAA,GAAO,CAAC;;;YAKvCK,cAAQ,CAAC,KAAK,CAAC,CAAC;SAChB;IAED,IAAA,wBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;YACC,IAAI,CAAC,IAAI,EAAE,CAAC;SACZ,CAAA;QAED,wBAAW,CAAA,SAAA,CAAA,WAAA,GAAX,UAAY,OAAsB,EAAA;IACjC,QAAA,IAAM,WAAW,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;YAClD,IACC,IAAI,CAAC,YAAY;gBACjB,WAAW;IACX,YAAA,WAAW,CAAC,YAAY,KAAK,WAAW,CAAC,aAAa,EACrD;gBACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC7B,SAAA;YACD,IAAI,OAAO,CAAC,kBAAkB,EAAE;gBAC/B,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAChC,SAAA;YACD,IAAI,CAAC,0BAA0B,EAAE,CAAC;SAClC,CAAA;IAED;;;IAGE;IACF,IAAA,wBAAA,CAAA,SAAA,CAAA,IAAI,GAAJ,YAAA;YAAA,IAmBC,KAAA,GAAA,IAAA,CAAA;YAlBA,IAAI,CAAC,gBAAgB,EAAE,CAAC;IACxB,QAAA,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE;gBACnC,IAAI,CAAC,wBAAwB,EAAE,CAAC;IAChC,SAAA;IACD,QAAA,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;gBAC9B,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,CAAC,EAC9C,EAAA,OAAA,KAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAA,EAAA,CACnC,CAAC;IACF,SAAA;YACD,IAAI,IAAI,CAAC,kBAAkB,EAAE;IAC5B,YAAA,IAAI,IAAI,CAAC,4BAA4B,CAAC,MAAM,EAAE;oBAC7C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,4BAA4B,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9D,aAAA;IAAM,iBAAA;oBACN,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,aAAA;IACD,SAAA;YACD,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,0BAA0B,EAAE,CAAC;SAClC,CAAA;QAED,wBAAkB,CAAA,SAAA,CAAA,kBAAA,GAAlB,UAAmB,OAAgB,EAAA;IAClC,QAAA,IAAI,CAAC,eAAe,GAAG,OAAO,CAAC;IAC/B,QAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACjC,CAAA;IAED;;IAEG;IACI,IAAA,wBAAA,CAAA,SAAA,CAAA,aAAa,GAAb,YAAA;YAAA,IA0DN,KAAA,GAAA,IAAA,CAAA;IAzDA,QAAA,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE;gBAC5B,IAAI,CAAC,WAAW,CAAC,aAAa;qBAC5B,aAAa,CAAC,uBAAuB,CAAC;IACtC,iBAAA,cAAc,CAAC;IACf,gBAAA,QAAQ,EAAE,QAAQ;IAClB,gBAAA,KAAK,EAAE,SAAS;IAChB,gBAAA,MAAM,EAAE,SAAS;IACjB,aAAA,CAAC,CAAC;gBACJ,OAAO;IACP,SAAA;YACD,IAAM,sBAAsB,GAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;YACpE,IAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,CAAC,EAAA;IAC1C,YAAA,IAAI,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAACN,0BAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;;oBAEjE,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE;IAC5D,oBAAA,OAAO,CAAC,CAAC;IACT,iBAAA;oBACD,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE;IAC5D,oBAAA,OAAO,CAAC,CAAC;IACT,iBAAA;oBACD,IAAI,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAI,CAAC,iBAAiB,CAAC,EAAE;IAClD,oBAAA,OAAO,CAAC,CAAC;IACT,iBAAA;IACD,aAAA;IAAM,iBAAA;;IAEN,gBAAA,IAAI,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAACA,0BAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;wBAClE,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE;IAC5D,wBAAA,OAAO,CAAC,CAAC;IACT,qBAAA;IACD,iBAAA;IACD,gBAAA,IAAI,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAACA,0BAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE;wBAClE,IAAI,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,sBAAsB,CAAC,EAAE;IAC5D,wBAAA,OAAO,CAAC,CAAC;IACT,qBAAA;IACD,iBAAA;IACD,gBAAA,IAAI,KAAI,CAAC,kBAAkB,CAAC,OAAO,CAACA,0BAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE;wBACtE,IAAI,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,KAAI,CAAC,iBAAiB,CAAC,EAAE;IAClD,wBAAA,OAAO,CAAC,CAAC;IACT,qBAAA;IACD,iBAAA;IACD,aAAA;IACF,SAAC,CAAC,CAAC;IAEH,QAAA,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;IACvB,YAAA,IAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,aAAa,CACtD,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,MAAM,CACvB,CAAC;IACF,YAAA,IAAI,EAAE,EAAE;oBACP,EAAE,CAAC,cAAc,CAAC;IACjB,oBAAA,QAAQ,EAAE,QAAQ;IAClB,oBAAA,KAAK,EAAE,SAAS;IAChB,oBAAA,MAAM,EAAE,SAAS;IACjB,iBAAA,CAAC,CAAC;IACH,aAAA;IACD,SAAA;YAED,IAAI,CAAC,0BAA0B,EAAE,CAAC;SAClC,CAAA;IAEM,IAAA,wBAAA,CAAA,SAAA,CAAA,mBAAmB,GAAnB,YAAA;IACN,QAAA,IAAI,WAA+B,CAAC;;YAEpC,IAAI,IAAI,CAAC,WAAW,IAAI,OAAO,IAAI,CAAC,WAAW,KAAK,QAAQ,EAAE;IAC7D,YAAA,IAAM,SAAS,GAAe,IAAI,CAAC,WAAW,CAAC;IAC/C,YAAA,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC;IACpC,YAAA,WAAW,GAAG,SAAS,CAAC,WAAW,CAAC;IACpC,SAAA;IAED,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;YAC9B,WAAW,GAAG,WAAW,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;IACvD,QAAA,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;;YAGnE,IAAI,IAAI,CAAC,uBAAuB,EAAE;gBACjC,WAAW;IACV,gBAAA,MAAM,IAAI,MAAM,CAAC,cAAc,EAAE;0BAC9B,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,cAAc,EAAE,EAAE,MAAM,CAAC;IACzD,sBAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;gBAC9B,IAAI,WAAW,IAAI,WAAW,KAAK,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE;IAC7D,gBAAA,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY;IAClC,qBAAA,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,EAAA;IACV,oBAAA,OAAO,CAAC,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;IAChC,iBAAC,CAAC;IACD,qBAAA,IAAI,CAAC,UAAC,CAAC,EAAA,EAAK,OAAA,CAAC,CAAC,IAAI,KAAK,WAAW,CAAtB,EAAsB,CAAC,CAAC;IACtC,gBAAA,IAAI,UAAU,EAAE;IACf,oBAAA,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;IAClC,iBAAA;IACD,aAAA;IACD,SAAA;IACD,QAAA,WAAW,GAAG,WAAW,GAAG,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YAEpE,IAAI,CAAC,0BAA0B,EAAE,CAAC;IAElC,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;;;IAGhB,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IAC3B,SAAA;IAAM,aAAA;gBACN,IAAM,MAAM,GAAG,MAAM;IACpB,kBAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAEC,cAAG,CAAC,iBAAiB,CAAC,aAAa,CAAC;sBAClE,EAAE,CAAC;;IAGN,YAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,MAAM,EAAE;oBACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACzC,aAAA;gBAED,IAAI,CAAC,eAAe,CAAC;oBACpB,MAAM,EAAE,IAAI,CAAC,KAAK;IAClB,gBAAA,mBAAmB,EAAE,MAAM;IAC3B,gBAAA,cAAc,EAAE,MAAM;IACrB,sBAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAEA,cAAG,CAAC,iBAAiB,CAAC,QAAQ,CAAC;IAC/D,sBAAE,EAAE;IACL,gBAAA,UAAU,EAAE,MAAM;IACjB,sBAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAEA,cAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC;IAC3D,sBAAE,EAAE;IACL,gBAAA,WAAW,EAAE,WAAW,CAAC,WAAW,EAAE;IACtC,gBAAA,QAAQ,EAAE,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ;IAC7C,aAAA,CAAC,CAAC;IACH,SAAA;SACD,CAAA;IAEM,IAAA,wBAAA,CAAA,SAAA,CAAA,eAAe,GAAf,UAAgB,OAAgB,EAAE,EAAE,EAAA;IAC1C,QAAA,IAAM,kBAAkB,GAAG,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;IACtE,QAAA,IAAG,kBAAkB,EAAE;IACtB,YAAA,IAAI,CAAC,SAAS,GAAG,kBAAkB,CAAC;IACpC,SAAA;IACD,QAAA,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YAEjC,IAAI,CAAC,0BAA0B,EAAE,CAAC;YAElC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;IACpD,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;IAC9B,YAAA,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAClC,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,eAAe,CAAC,IAAI,CACzB,CAAC;gBACF,IAAM,MAAM,GAAG,MAAM;IACpB,kBAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAEA,cAAG,CAAC,iBAAiB,CAAC,aAAa,CAAC;sBAClE,EAAE,CAAC;;IAEN,YAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,MAAM,EAAE;oBACpC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACzC,aAAA;gBAED,IAAI,CAAC,eAAe,CAAC;oBACpB,MAAM,EAAE,IAAI,CAAC,KAAK;IAClB,gBAAA,mBAAmB,EAAE,MAAM;IAC3B,gBAAA,cAAc,EAAE,MAAM;IACrB,sBAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAEA,cAAG,CAAC,iBAAiB,CAAC,QAAQ,CAAC;IAC/D,sBAAE,EAAE;IACL,gBAAA,UAAU,EAAE,MAAM;IACjB,sBAAE,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,EAAEA,cAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC;IAC3D,sBAAE,EAAE;oBACL,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,EAAE;IACpD,gBAAA,QAAQ,EAAE,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ;IAC7C,aAAA,CAAC,CAAC;IACH,SAAA;IAAM,aAAA;;;IAGN,YAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IAC3B,SAAA;YAED,EAAE,CAAC,KAAK,EAAE,CAAC;SACX,CAAA;QAEM,wBAAe,CAAA,SAAA,CAAA,eAAA,GAAf,UAAgB,KAAoB,EAAA;YAC1C,IAAM,YAAY,GAAG,iBAAiB,CAAC;IACvC,QAAA,IAAM,gBAAgB,GAAG,QAAQ,CAAC;IAClC,QAAA,IAAM,gBAAgB,GAAG;gBACxB,WAAW;gBACX,SAAS;gBACT,YAAY;gBACZ,WAAW;gBACX,MAAM;gBACN,KAAK;gBACL,QAAQ;gBACR,QAAQ;gBACR,WAAW;aACX,CAAC;YAEF,IACC,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC;IAC7B,YAAA,EAAE,KAAK,CAAC,OAAO,IAAI,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBACpD,CAAC,gBAAgB,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EACpC;gBACD,KAAK,CAAC,cAAc,EAAE,CAAC;IACvB,SAAA;SACD,CAAA;QAED,wBAAgB,CAAA,SAAA,CAAA,gBAAA,GAAhB,UAAiB,EAAO,EAAA;IACvB,QAAA,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;SAC1B,CAAA;QAED,wBAAiB,CAAA,SAAA,CAAA,iBAAA,GAAjB,UAAkB,EAAO,EAAA;IACxB,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;SACpB,CAAA;QAED,wBAAgB,CAAA,SAAA,CAAA,gBAAA,GAAhB,UAAiB,UAAmB,EAAA;IACnC,QAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC3B,CAAA;QAED,wBAAU,CAAA,SAAA,CAAA,UAAA,GAAV,UAAW,GAAQ,EAAA;YAAnB,IAQC,KAAA,GAAA,IAAA,CAAA;YAPA,IAAI,GAAG,KAAK,SAAS,EAAE;gBACtB,IAAI,CAAC,IAAI,EAAE,CAAC;IACZ,SAAA;IACD,QAAA,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACvB,QAAA,UAAU,CAAC,YAAA;gBACV,KAAI,CAAC,mBAAmB,EAAE,CAAC;aAC3B,EAAE,CAAC,CAAC,CAAC;SACN,CAAA;IAED,IAAA,wBAAA,CAAA,SAAA,CAAA,kBAAkB,GAAlB,YAAA;YACC,IAAI,WAAW,GAAG,EAAE,CAAC;YACrB,IAAI,IAAI,CAAC,iBAAiB,EAAE;IAC3B,YAAA,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC;IACrC,SAAA;IAAM,aAAA,IAAI,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE;IAC5C,YAAA,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC;gBAC/C,IAAI,IAAI,CAAC,gBAAgB,EAAE;IAC1B,gBAAA,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;IAC/C,aAAA;IACD,SAAA;IACD,QAAA,OAAO,WAAW,CAAC;SACnB,CAAA;;IAGD;;;;IAIG;IACK,IAAA,wBAAA,CAAA,SAAA,CAAA,eAAe,GAAf,UACP,WAAmB,EACnB,WAAmB,EAAA;IAEnB,QAAA,IAAI,MAAuB,CAAC;YAC5B,IAAI;IACH,YAAA,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,WAAW,EAAE,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC;IACtE,SAAA;YAAC,OAAO,CAAC,EAAE,GAAE;IACd,QAAA,OAAO,MAAM,CAAC;SACd,CAAA;IAED;;IAEG;IACK,IAAA,wBAAA,CAAA,SAAA,CAAA,0BAA0B,GAA1B,YAAA;IACP,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,eAAe,EAAE;IAClD,YAAA,IAAM,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC;IAC9C,YAAA,IAAI,CAAC,qBAAqB;oBACzB,6BAA6B,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACtD,SAAA;IAAM,aAAA;IACN,YAAA,IAAI,CAAC,qBAAqB,GAAG,EAAE,CAAC;IAChC,SAAA;SACD,CAAA;IAED;;;IAGG;QACK,wBAAc,CAAA,SAAA,CAAA,cAAA,GAAd,UAAe,WAAmB,EAAA;IACzC,QAAA,IAAM,MAAM,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IAC5E,QAAA,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAClC,MAAM,EACNA,cAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CACxC,CAAC;YACF,IAAI,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC,gBAAgB,EAAE;IACzD,YAAA,WAAW,GAAG,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IAC/D,SAAA;IACD,QAAA,OAAO,WAAW,CAAC;SACnB,CAAA;IAED;;;;;IAKG;IACK,IAAA,wBAAA,CAAA,SAAA,CAAA,iBAAiB,GAAjB,UACP,WAAmB,EACnB,MAAuB,EAAA;;IAGvB,QAAA,IAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAC;;YAEpD,IAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CACzC,UAAC,CAAC,EAAA,EAAK,OAAA,CAAC,CAAC,QAAQ,KAAK,WAAW,CAAC,QAAQ,EAAE,CAAA,EAAA,CAC5C,CAAC;;IAEF,QAAA,IAAM,WAAW,GAAG,SAAS,CAAC,IAAI,CAAC,UAAC,CAAC,EAAA,EAAK,OAAA,CAAC,CAAC,SAAS,KAAK,SAAS,CAAzB,EAAyB,CAAC,CAAC;;IAErE,QAAA,IAAM,kBAAkB,GAAG,SAAS,CAAC,MAAM,CAC1C,UAAC,CAAC,EAAA,EAAK,OAAA,CAAC,CAAC,SAAS,KAAK,SAAS,CAAzB,EAAyB,CAChC,CAAC;IACF,QAAA,IAAI,cAAc,GAAG,WAAW,GAAG,WAAW,CAAC,IAAI,GAAG,SAAS,CAAC;IAEhE;;;IAGE;IACF,QAAA,kBAAkB,CAAC,OAAO,CAAC,UAAC,OAAO,EAAA;IAClC,YAAA,OAAO,CAAC,SAAS,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAA;IAClC,gBAAA,IAAI,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;IACnC,oBAAA,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC;IAC9B,iBAAA;IACF,aAAC,CAAC,CAAC;IACJ,SAAC,CAAC,CAAC;IAEH,QAAA,OAAO,cAAc,CAAC;SACtB,CAAA;IAED;;;IAGG;QACO,wBAAyB,CAAA,SAAA,CAAA,yBAAA,GAAzB,UAA0B,WAAmB,EAAA;YACtD,IAAI;gBACH,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAC3B,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,WAAW,CAAC,EAC5CA,cAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,YAAY,CAAC,CACxC,CAAC;IACF,SAAA;IAAC,QAAA,OAAO,CAAC,EAAE;IACX,YAAA,OAAO,CAAC,CAAC;IACT,SAAA;SACD,CAAA;IAED;;IAEG;IACO,IAAA,wBAAA,CAAA,SAAA,CAAA,gBAAgB,GAAhB,YAAA;YAAA,IAuBT,KAAA,GAAA,IAAA,CAAA;IAtBA,QAAA,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YAEvB,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,CAAC,EAAA;IAC3C,YAAA,IAAM,OAAO,GAAY;IACxB,gBAAA,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;IACrB,gBAAA,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;IACrB,gBAAA,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;IACzB,gBAAA,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACpB,gBAAA,SAAS,EAAG,CAAC,CAAC,CAAC,CAAc,IAAI,SAAS;oBAC1C,MAAM,EAAE,iBAAe,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAI;oBACxC,SAAS,EAAE,OAAQ,GAAA,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAI;IACxD,gBAAA,WAAW,EAAE,EAAE;iBACf,CAAC;gBAEF,IAAI,KAAI,CAAC,iBAAiB,EAAE;IAC3B,gBAAA,OAAO,CAAC,WAAW,GAAG,KAAI,CAAC,yBAAyB,CACnD,OAAO,CAAC,IAAI,CAAC,WAAW,EAAE,CAC1B,CAAC;IACF,aAAA;IAED,YAAA,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACjC,SAAC,CAAC,CAAC;SACH,CAAA;IAED;;IAEG;IACK,IAAA,wBAAA,CAAA,SAAA,CAAA,wBAAwB,GAAxB,YAAA;YAAA,IAWP,KAAA,GAAA,IAAA,CAAA;IAVA,QAAA,IAAI,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE;IACnC,YAAA,IAAI,CAAC,4BAA4B,GAAG,EAAE,CAAC;IACvC,YAAA,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAC,IAAI,EAAA;oBACpC,IAAM,gBAAgB,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,UAAC,CAAC,EAAA;IACnD,oBAAA,OAAO,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC;IACxB,iBAAC,CAAC,CAAC;oBAEH,KAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7D,aAAC,CAAC,CAAC;IACH,SAAA;SACD,CAAA;IAED;;IAEG;IACK,IAAA,wBAAA,CAAA,SAAA,CAAA,qBAAqB,GAArB,YAAA;YAAA,IAeP,KAAA,GAAA,IAAA,CAAA;YAdA,IAAI,IAAI,CAAC,kBAAkB,EAAE;gBAC5B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAC,CAAC,EAAA;IAC/C,gBAAA,OAAO,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,KAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC;IACvE,aAAC,CAAC,CAAC;gBACH,IAAI,IAAI,CAAC,eAAe,EAAE;oBACzB,IAAI,IAAI,CAAC,WAAW,EAAE;wBACrB,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC3B,iBAAA;IAAM,qBAAA;;;IAGN,oBAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;IAC3B,iBAAA;IACD,aAAA;IACD,SAAA;SACD,CAAA;;;oGA/eW,wBAAwB,EAAAH,aAAA,CAAA,iBAAA,CAAAS,WAAA,CAAA,CAAA,CAAA,EAAA,CAAA;0FAAxB,wBAAwB,EAAA,SAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,CAAA,EAAA,SAAA,EAAA,SAAA,8BAAA,CAAA,EAAA,EAAA,GAAA,EAAA;YAAA,IAAA,EAAA,GAAA,CAAA,EAAA;;;;;;IAfzB,SAAA;IAAA,KAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,QAAA,EAAA,UAAA,EAAA,aAAA,EAAA,eAAA,EAAA,uBAAA,EAAA,yBAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,wBAAA,EAAA,0BAAA,EAAA,SAAA,EAAA,WAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,EAAA,OAAA,EAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,QAAA,EAAA,CAAAT,aAAA,CAAA,kBAAA,CAAA;gBACV,WAAW;IACX,YAAA;IACC,gBAAA,OAAO,EAAEU,oBAAiB;;oBAE1B,WAAW,EAAEC,aAAU,CAAC,YAAA,EAAM,OAAA,wBAAwB,CAAA,EAAA,CAAC;IACvD,gBAAA,KAAK,EAAE,IAAI;IACX,aAAA;IACD,YAAA;IACC,gBAAA,OAAO,EAAEC,gBAAa;IACtB,gBAAA,QAAQ,EAAE,oBAAoB;IAC9B,gBAAA,KAAK,EAAE,IAAI;IACX,aAAA;IACD,SAAA,CAAA,EAAAZ,aAAA,CAAA,oBAAA,CAAA,EAAA,KAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,KAAA,EAAA,qBAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,CAAA,EAAA,qBAAA,EAAA,CAAA,EAAA,SAAA,EAAA,YAAA,CAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,CAAA,EAAA,oBAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,WAAA,EAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,oBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,YAAA,CAAA,EAAA,CAAA,OAAA,EAAA,gCAAA,EAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,MAAA,EAAA,KAAA,EAAA,cAAA,EAAA,KAAA,EAAA,CAAA,EAAA,MAAA,EAAA,IAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,EAAA,aAAA,EAAA,MAAA,EAAA,UAAA,EAAA,eAAA,CAAA,EAAA,CAAA,WAAA,EAAA,EAAA,CAAA,EAAA,CAAA,CAAA,EAAA,oBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,eAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,OAAA,EAAA,kBAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,aAAA,EAAA,EAAA,CAAA,EAAA,CAAA,OAAA,EAAA,6BAAA,EAAA,CAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,OAAA,EAAA,cAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,4BAAA,EAAA,CAAA,EAAA,IAAA,EAAA,OAAA,EAAA,CAAA,EAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,CAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,IAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,EAAA,EAAA,CAAA,EAAA,SAAA,EAAA,aAAA,EAAA,eAAA,EAAA,OAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,IAAA,EAAA,OAAA,CAAA,EAAA,CAAA,CAAA,EAAA,eAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,gBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,CAAA,EAAA,CAAA,CAAA,EAAA,cAAA,EAAA,eAAA,EAAA,CAAA,EAAA,IAAA,EAAA,OAAA,CAAA,CAAA,EAAA,QAAA,EAAA,SAAA,iCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;YAAA,IAAA,EAAA,GAAA,CAAA,EAAA;gBC9CFA,aAAuE,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;gBACtEA,aAKC,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;gBACAA,aAA+D,CAAA,cAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;gBAC9DA,aAAoE,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;IACpE,YAAAA,aAEM,CAAA,UAAA,CAAA,CAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;gBACNA,aAA8B,CAAA,SAAA,CAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;gBAC/BA,aAAM,CAAA,YAAA,EAAA,CAAA;IACN,YAAAA,aA4CM,CAAA,UAAA,CAAA,CAAA,EAAA,uCAAA,EAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,CAAA,CAAA,CAAA;gBACPA,aAAM,CAAA,YAAA,EAAA,CAAA;gBACNA,aAeE,CAAA,cAAA,CAAA,CAAA,EAAA,OAAA,EAAA,CAAA,EAAA,CAAA,CAAA,CAAA;IATD,YAAAA,aAAQ,CAAA,UAAA,CAAA,MAAA,EAAA,SAAA,uDAAA,GAAA,EAAA,OAAA,GAAA,CAAA,SAAA,EAAW,IAAC,CACR,UAAA,EAAA,SAAA,2DAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,eAAA,CAAA,MAAA,CAAuB,IADf,CAAA,eAAA,EAAA,SAAA,gEAAA,CAAA,MAAA,EAAA,EAAA,OAAA,GAAA,CAAA,WAAA,GAAA,MAAA,CAAA,EAAA,CAAA,CAAA,eAAA,EAAA,SAAA,gEAAA,GAAA,EAAA,OAGH,yBAAqB,CAHlB,EAAA,CAAA,CAAA;gBANrBA,aAeE,CAAA,YAAA,EAAA,CAAA;gBACHA,aAAM,CAAA,YAAA,EAAA,CAAA;;;gBA5E+BA,aAAiC,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,qBAAA,CAAA,CAAA;IAIpE,YAAAA,aAAkC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;gBAAlCA,aAAA,CAAA,UAAA,CAAA,SAAA,EAAAA,aAAA,CAAA,eAAA,CAAA,EAAA,EAAA,GAAA,EAAA,GAAA,CAAA,QAAA,CAAA,CAAkC,CAAA,YAAA,EAAA,GAAA,CAAA,QAAA,CAAA,CAAA;IAIV,YAAAA,aAAsC,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;gBAAtCA,aAAsC,CAAA,UAAA,CAAA,SAAA,EAAA,GAAA,CAAA,eAAA,IAAA,IAAA,GAAA,IAAA,GAAA,GAAA,CAAA,eAAA,CAAA,SAAA,CAAA,CAAA;IACvD,YAAAA,aAAsB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;gBAAtBA,aAAsB,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,gBAAA,CAAA,CAAA;IAqD7B,YAAAA,aAAkB,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA;gBAAlBA,aAAA,CAAA,UAAA,CAAA,MAAA,EAAA,GAAA,CAAA,SAAA,CAAkB,CAAA,IAAA,EAAA,GAAA,CAAA,OAAA,CAAA,CAAA,SAAA,EAAA,GAAA,CAAA,QAAA,CAAA,CAAA,SAAA,EAAA,GAAA,CAAA,WAAA,CAAA,CAAA,UAAA,EAAA,GAAA,CAAA,QAAA,CAAA,CAAA,aAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,CAAA,CAAA;IAUlB,YAAAA,aAAA,CAAA,WAAA,CAAA,WAAA,EAAA,GAAA,CAAA,SAAA,CAA4B,CAAA,YAAA,EAAA,GAAA,CAAA,eAAA,CAAA,CAAA;;;;2FDxBjB,wBAAwB,EAAA,CAAA;sBApBpCa,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;;IAEV,oBAAA,QAAQ,EAAE,oBAAoB;IAC9B,oBAAA,WAAW,EAAE,qCAAqC;IAClD,oBAAA,SAAS,EAAE,CAAC,0BAA0B,EAAE,oCAAoC,CAAC;IAC7E,oBAAA,SAAS,EAAE;4BACV,WAAW;IACX,wBAAA;IACC,4BAAA,OAAO,EAAEH,oBAAiB;;gCAE1B,WAAW,EAAEC,aAAU,CAAC,YAAA,iCAA8B,CAAA,EAAA,CAAC;IACvD,4BAAA,KAAK,EAAE,IAAI;IACX,yBAAA;IACD,wBAAA;IACC,4BAAA,OAAO,EAAEC,gBAAa;IACtB,4BAAA,QAAQ,EAAE,oBAAoB;IAC9B,4BAAA,KAAK,EAAE,IAAI;IACX,yBAAA;IACD,qBAAA;qBACD,CAAA;mEAES,KAAK,EAAA,CAAA;0BAAbE,QAAK;oBACG,kBAAkB,EAAA,CAAA;0BAA1BA,QAAK;oBACG,iBAAiB,EAAA,CAAA;0BAAzBA,QAAK;oBACG,iBAAiB,EAAA,CAAA;0BAAzBA,QAAK;oBACG,YAAY,EAAA,CAAA;0BAApBA,QAAK;oBACG,QAAQ,EAAA,CAAA;0BAAhBA,QAAK;oBACG,aAAa,EAAA,CAAA;0BAArBA,QAAK;oBACG,uBAAuB,EAAA,CAAA;0BAA/BA,QAAK;oBACG,iBAAiB,EAAA,CAAA;0BAAzBA,QAAK;oBACG,kBAAkB,EAAA,CAAA;0BAA1BA,QAAK;oBACG,wBAAwB,EAAA,CAAA;0BAAhCA,QAAK;oBACG,SAAS,EAAA,CAAA;0BAAjBA,QAAK;oBACG,kBAAkB,EAAA,CAAA;0BAA1BA,QAAK;oBACG,kBAAkB,EAAA,CAAA;0BAA1BA,QAAK;oBACG,eAAe,EAAA,CAAA;0BAAvBA,QAAK;oBACG,OAAO,EAAA,CAAA;0BAAfA,QAAK;oBACG,gBAAgB,EAAA,CAAA;0BAAxBA,QAAK;oBACG,gBAAgB,EAAA,CAAA;0BAAxBA,QAAK;oBAGa,aAAa,EAAA,CAAA;0BAA/BC,SAAM;oBAuBmB,WAAW,EAAA,CAAA;0BAApCC,YAAS;2BAAC,aAAa,CAAA;;;;QElFZ,qBAAqB,GAA0CC,mBAAgB,CAAC,OAAO,GAAG;AAcvG,QAAA,qBAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,qBAAA,GAAA;;;;8FAAa,qBAAqB,GAAA,CAAA,EAAA,CAAA;sFAArB,qBAAqB,EAAA,CAAA,CAAA;IAVxB,qBAAA,CAAA,IAAA,iBAAAjB,aAAA,CAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA;gBACRkB,eAAY;gBACZC,cAAW;gBACXC,sBAAmB;gBACnB,qBAAqB;gBACrBC,gBAAa,CAAC,OAAO,EAAE;aACtB,CAAA,EAAA,CAAA,CAAA;;2FAIU,qBAAqB,EAAA,CAAA;sBAZjCC,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,YAAY,EAAE,CAAC,wBAAwB,EAAE,8BAA8B,CAAC;IACxE,oBAAA,OAAO,EAAE;4BACRJ,eAAY;4BACZC,cAAW;4BACXC,sBAAmB;4BACnB,qBAAqB;4BACrBC,gBAAa,CAAC,OAAO,EAAE;IACtB,qBAAA;IAEF,oBAAA,OAAO,EAAE,CAAC,wBAAwB,EAAE,8BAA8B,CAAC;qBACnE,CAAA;;;IACY,CAAA,YAAA;QAAA,CAAA,OAAA,SAAA,KAAA,WAAA,IAAA,SAAA,KAAArB,aAAA,CAAA,kBAAA,CAAA,qBAAqB,EAXlB,EAAA,YAAA,EAAA,CAAA,wBAAwB,EAAE,8BAA8B,aAEtEkB,eAAY;gBACZC,cAAW;IACX,YAAAC,sBAAmB,EAAAf,aAAA,CAAA,gBAAA,EAAAkB,aAAA,CAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAKV,wBAAwB,EAAE,8BAA8B,CAAA,EAAA,CAAA,CAAA;IAAA,CAAA,GAAA;;ICtBnE;;IAEG;;ICFH;;IAEG;;;;;;;;;;;;;"}